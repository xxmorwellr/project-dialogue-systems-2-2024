{"version":3,"file":"createFetchTokenUsingSubscriptionKey.js","names":["TOKEN_EXPIRATION","TOKEN_EARLY_RENEWAL","subscriptionKey","lastRenew","accessTokenPromise","console","warn","now","Date","fetchAuthorizationToken","catch","err","Promise","reject"],"sources":["../../../src/BingSpeech/Util/createFetchTokenUsingSubscriptionKey.js"],"sourcesContent":["import fetchAuthorizationToken from '../fetchAuthorizationToken';\n\n// Token expiration is hardcoded at 10 minutes\n// https://docs.microsoft.com/en-us/azure/cognitive-services/Speech/how-to/how-to-authentication?tabs=Powershell#use-an-authorization-token\nconst TOKEN_EXPIRATION = 600000;\nconst TOKEN_EARLY_RENEWAL = 60000;\n\nexport default subscriptionKey => {\n  let lastRenew = 0;\n  let accessTokenPromise = null;\n\n  return () => {\n    if (!lastRenew) {\n      console.warn('Subscription key token exchange is not recommended for production code. It will leak your subscription key to the client.');\n    }\n\n    const now = Date.now();\n\n    if (!accessTokenPromise || now - lastRenew > TOKEN_EXPIRATION - TOKEN_EARLY_RENEWAL) {\n      lastRenew = now;\n\n      accessTokenPromise = fetchAuthorizationToken(subscriptionKey).catch(err => {\n        // Force to renew on next fetch\n        lastRenew = 0;\n\n        return Promise.reject(err);\n      });\n    }\n\n    return accessTokenPromise;\n  }\n}\n"],"mappings":";;;;;;;;;AAAA;;AAEA;AACA;AACA,IAAMA,gBAAgB,GAAG,MAAzB;AACA,IAAMC,mBAAmB,GAAG,KAA5B;;eAEe,kBAAAC,eAAe,EAAI;EAChC,IAAIC,SAAS,GAAG,CAAhB;EACA,IAAIC,kBAAkB,GAAG,IAAzB;EAEA,OAAO,YAAM;IACX,IAAI,CAACD,SAAL,EAAgB;MACdE,OAAO,CAACC,IAAR,CAAa,2HAAb;IACD;;IAED,IAAMC,GAAG,GAAGC,IAAI,CAACD,GAAL,EAAZ;;IAEA,IAAI,CAACH,kBAAD,IAAuBG,GAAG,GAAGJ,SAAN,GAAkBH,gBAAgB,GAAGC,mBAAhE,EAAqF;MACnFE,SAAS,GAAGI,GAAZ;MAEAH,kBAAkB,GAAG,IAAAK,gCAAA,EAAwBP,eAAxB,EAAyCQ,KAAzC,CAA+C,UAAAC,GAAG,EAAI;QACzE;QACAR,SAAS,GAAG,CAAZ;QAEA,OAAOS,OAAO,CAACC,MAAR,CAAeF,GAAf,CAAP;MACD,CALoB,CAArB;IAMD;;IAED,OAAOP,kBAAP;EACD,CAnBD;AAoBD,C"}
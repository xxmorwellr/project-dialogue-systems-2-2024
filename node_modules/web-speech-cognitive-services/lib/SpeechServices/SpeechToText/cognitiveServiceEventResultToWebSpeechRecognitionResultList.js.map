{"version":3,"file":"cognitiveServiceEventResultToWebSpeechRecognitionResultList.js","names":["SpeechSDK","ResultReason","RecognizingSpeech","RecognizedSpeech","result","maxAlternatives","Infinity","textNormalization","reason","json","NBest","resultList","confidence","transcript","text","isFinal","arrayToMap","slice","map","Confidence","display","Display","itn","ITN","lexical","Lexical","maskedITN","MaskedITN"],"sources":["../../../src/SpeechServices/SpeechToText/cognitiveServiceEventResultToWebSpeechRecognitionResultList.js"],"sourcesContent":["import arrayToMap from '../../Util/arrayToMap';\nimport SpeechSDK from '../SpeechSDK';\n\nconst {\n  ResultReason: { RecognizingSpeech, RecognizedSpeech }\n} = SpeechSDK;\n\nexport default function(result, { maxAlternatives = Infinity, textNormalization = 'display' } = {}) {\n  if (result.reason === RecognizingSpeech || (result.reason === RecognizedSpeech && !result.json.NBest)) {\n    const resultList = [\n      {\n        confidence: 0.5,\n        transcript: result.text\n      }\n    ];\n\n    if (result.reason === RecognizedSpeech) {\n      resultList.isFinal = true;\n    }\n\n    return resultList;\n  } else if (result.reason === RecognizedSpeech) {\n    const resultList = arrayToMap(\n      (result.json.NBest || [])\n        .slice(0, maxAlternatives)\n        .map(({ Confidence: confidence, Display: display, ITN: itn, Lexical: lexical, MaskedITN: maskedITN }) => ({\n          confidence,\n          transcript:\n            textNormalization === 'itn'\n              ? itn\n              : textNormalization === 'lexical'\n              ? lexical\n              : textNormalization === 'maskeditn'\n              ? maskedITN\n              : display\n        })),\n      { isFinal: true }\n    );\n\n    return resultList;\n  }\n\n  return [];\n}\n"],"mappings":";;;;;;;;;AAAA;;AACA;;AAEA,4BAEIA,kBAFJ,CACEC,YADF;AAAA,IACkBC,iBADlB,yBACkBA,iBADlB;AAAA,IACqCC,gBADrC,yBACqCA,gBADrC;;AAIe,kBAASC,MAAT,EAAqF;EAAA,+EAAJ,EAAI;EAAA,gCAAlEC,eAAkE;EAAA,IAAlEA,eAAkE,qCAAhDC,QAAgD;EAAA,iCAAtCC,iBAAsC;EAAA,IAAtCA,iBAAsC,sCAAlB,SAAkB;;EAClG,IAAIH,MAAM,CAACI,MAAP,KAAkBN,iBAAlB,IAAwCE,MAAM,CAACI,MAAP,KAAkBL,gBAAlB,IAAsC,CAACC,MAAM,CAACK,IAAP,CAAYC,KAA/F,EAAuG;IACrG,IAAMC,UAAU,GAAG,CACjB;MACEC,UAAU,EAAE,GADd;MAEEC,UAAU,EAAET,MAAM,CAACU;IAFrB,CADiB,CAAnB;;IAOA,IAAIV,MAAM,CAACI,MAAP,KAAkBL,gBAAtB,EAAwC;MACtCQ,UAAU,CAACI,OAAX,GAAqB,IAArB;IACD;;IAED,OAAOJ,UAAP;EACD,CAbD,MAaO,IAAIP,MAAM,CAACI,MAAP,KAAkBL,gBAAtB,EAAwC;IAC7C,IAAMQ,WAAU,GAAG,IAAAK,mBAAA,EACjB,CAACZ,MAAM,CAACK,IAAP,CAAYC,KAAZ,IAAqB,EAAtB,EACGO,KADH,CACS,CADT,EACYZ,eADZ,EAEGa,GAFH,CAEO;MAAA,IAAeN,UAAf,SAAGO,UAAH;MAAA,IAAoCC,OAApC,SAA2BC,OAA3B;MAAA,IAAkDC,GAAlD,SAA6CC,GAA7C;MAAA,IAAgEC,OAAhE,SAAuDC,OAAvD;MAAA,IAAoFC,SAApF,SAAyEC,SAAzE;MAAA,OAAqG;QACxGf,UAAU,EAAVA,UADwG;QAExGC,UAAU,EACRN,iBAAiB,KAAK,KAAtB,GACIe,GADJ,GAEIf,iBAAiB,KAAK,SAAtB,GACAiB,OADA,GAEAjB,iBAAiB,KAAK,WAAtB,GACAmB,SADA,GAEAN;MATkG,CAArG;IAAA,CAFP,CADiB,EAcjB;MAAEL,OAAO,EAAE;IAAX,CAdiB,CAAnB;;IAiBA,OAAOJ,WAAP;EACD;;EAED,OAAO,EAAP;AACD"}
{"version":3,"file":"createSpeechRecognitionPonyfill.js","names":["AudioConfig","SpeechSDK","OutputFormat","ResultReason","SpeechConfig","SpeechRecognizer","serializeRecognitionResult","duration","errorDetails","json","offset","properties","reason","resultId","text","JSON","parse","averageAmplitude","arrayBuffer","array","Int16Array","reduce","call","amplitude","Math","abs","length","cognitiveServicesAsyncToPromise","fn","args","Promise","resolve","reject","SpeechRecognitionEvent","type","data","emma","interpretation","resultIndex","results","Event","prepareAudioConfig","audioConfig","originalAttach","attach","boundOriginalAttach","bind","firstChunk","muted","reader","read","chunk","buffer","events","onEvent","name","ArrayBuffer","isEnd","timeReceived","Date","now","pause","unprepare","createSpeechRecognitionPonyfillFromRecognizer","createRecognizer","enableTelemetry","looseEvents","referenceGrammars","textNormalization","SpeechRecognition","_continuous","_interimResults","_lang","window","document","documentElement","getAttribute","navigator","language","_grammars","SpeechGrammarList","_maxAlternatives","event","dispatchEvent","value","Error","getEventAttributeValue","setEventAttributeValue","_startOnce","catch","err","ErrorEvent","error","message","stack","lang","recognizer","queue","createPromiseQueue","push","audioSourceReady","audioSourceOff","firstAudibleChunk","detachAudioConfigEvent","detach","canceled","_","sessionId","recognized","result","recognizing","sessionStarted","sessionStopped","speechStartDetected","speechEndDetected","phrases","grammars","dynamicGrammar","privReco","addReferenceGrammar","addPhrase","startContinuousRecognitionAsync","stopContinuousRecognitionAsync","abort","stop","undefined","finalizedResults","loop","shift","Object","keys","forEach","emitCognitiveServices","errorMessage","test","finalEvent","audioStarted","stopping","soundStarted","speechStarted","NoMatch","cognitiveServiceEventResultToWebSpeechRecognitionResultList","maxAlternatives","recognizable","transcript","continuous","interimResults","console","dispose","EventTarget","options","patchOptions","fromDefaultMicrophoneInput","fetchCredentials","speechRecognitionEndpointId","mediaDevices","getUserMedia","warn","authorizationToken","region","speechRecognitionHostname","subscriptionKey","host","hostname","port","protocol","speechConfig","fromHost","fromAuthorizationToken","fromSubscription","endpointId","outputFormat","Detailed","speechRecognitionLanguage"],"sources":["../../../src/SpeechServices/SpeechToText/createSpeechRecognitionPonyfill.js"],"sourcesContent":["/* eslint class-methods-use-this: \"off\" */\n/* eslint complexity: [\"error\", 70] */\n/* eslint no-await-in-loop: \"off\" */\n/* eslint no-empty-function: \"off\" */\n/* eslint no-magic-numbers: [\"error\", { \"ignore\": [0, 100, 150] }] */\n\nimport { Event, EventTarget, getEventAttributeValue, setEventAttributeValue } from 'event-target-shim/es5';\n\nimport cognitiveServiceEventResultToWebSpeechRecognitionResultList from './cognitiveServiceEventResultToWebSpeechRecognitionResultList';\nimport createPromiseQueue from '../../Util/createPromiseQueue';\nimport patchOptions from '../patchOptions';\nimport SpeechGrammarList from './SpeechGrammarList';\nimport SpeechSDK from '../SpeechSDK';\n\n// https://docs.microsoft.com/en-us/javascript/api/microsoft-cognitiveservices-speech-sdk/speechconfig?view=azure-node-latest#outputformat\n// {\n//   \"RecognitionStatus\": \"Success\",\n//   \"Offset\": 900000,\n//   \"Duration\": 49000000,\n//   \"NBest\": [\n//     {\n//       \"Confidence\": 0.738919,\n//       \"Lexical\": \"second\",\n//       \"ITN\": \"second\",\n//       \"MaskedITN\": \"second\",\n//       \"Display\": \"Second.\"\n//     }\n//   ]\n// }\n\n// {\n//   \"RecognitionStatus\": \"InitialSilenceTimeout\",\n//   \"Offset\": 50000000,\n//   \"Duration\": 0\n// }\n\nconst { AudioConfig, OutputFormat, ResultReason, SpeechConfig, SpeechRecognizer } = SpeechSDK;\n\nfunction serializeRecognitionResult({ duration, errorDetails, json, offset, properties, reason, resultId, text }) {\n  return {\n    duration,\n    errorDetails,\n    json: JSON.parse(json),\n    offset,\n    properties,\n    reason,\n    resultId,\n    text\n  };\n}\n\nfunction averageAmplitude(arrayBuffer) {\n  const array = new Int16Array(arrayBuffer);\n\n  return (\n    [].reduce.call(array, (averageAmplitude, amplitude) => averageAmplitude + Math.abs(amplitude), 0) / array.length\n  );\n}\n\nfunction cognitiveServicesAsyncToPromise(fn) {\n  return (...args) => new Promise((resolve, reject) => fn(...args, resolve, reject));\n}\n\nclass SpeechRecognitionEvent extends Event {\n  constructor(type, { data, emma, interpretation, resultIndex, results } = {}) {\n    super(type);\n\n    this.data = data;\n    this.emma = emma;\n    this.interpretation = interpretation;\n    this.resultIndex = resultIndex;\n    this.results = results;\n  }\n}\n\nfunction prepareAudioConfig(audioConfig) {\n  const originalAttach = audioConfig.attach;\n  const boundOriginalAttach = audioConfig.attach.bind(audioConfig);\n  let firstChunk;\n  let muted;\n\n  // We modify \"attach\" function and detect when audible chunk is read.\n  // We will only modify \"attach\" function once.\n  audioConfig.attach = async () => {\n    const reader = await boundOriginalAttach();\n\n    return {\n      ...reader,\n      read: async () => {\n        const chunk = await reader.read();\n\n        // The magic number 150 is measured by:\n        // 1. Set microphone volume to 0\n        // 2. Observe the amplitude (100-110) for the first few chunks\n        //    (There is a short static caught when turning on the microphone)\n        // 3. Set the number a bit higher than the observation\n\n        if (!firstChunk && averageAmplitude(chunk.buffer) > 150) {\n          audioConfig.events.onEvent({ name: 'FirstAudibleChunk' });\n          firstChunk = true;\n        }\n\n        if (muted) {\n          return { buffer: new ArrayBuffer(0), isEnd: true, timeReceived: Date.now() };\n        }\n\n        return chunk;\n      }\n    };\n  };\n\n  return {\n    audioConfig,\n    pause: () => {\n      muted = true;\n    },\n    unprepare: () => {\n      audioConfig.attach = originalAttach;\n    }\n  };\n}\n\nexport function createSpeechRecognitionPonyfillFromRecognizer({\n  createRecognizer,\n  enableTelemetry,\n  looseEvents,\n  referenceGrammars,\n  textNormalization\n}) {\n  // If enableTelemetry is set to null or non-boolean, we will default to true.\n  SpeechRecognizer.enableTelemetry(enableTelemetry !== false);\n\n  class SpeechRecognition extends EventTarget {\n    constructor() {\n      super();\n\n      this._continuous = false;\n      this._interimResults = false;\n      this._lang =\n        typeof window !== 'undefined'\n          ? window.document.documentElement.getAttribute('lang') || window.navigator.language\n          : 'en-US';\n      this._grammars = new SpeechGrammarList();\n      this._maxAlternatives = 1;\n    }\n\n    emitCognitiveServices(type, event) {\n      this.dispatchEvent(\n        new SpeechRecognitionEvent('cognitiveservices', {\n          data: {\n            ...event,\n            type\n          }\n        })\n      );\n    }\n\n    get continuous() {\n      return this._continuous;\n    }\n\n    set continuous(value) {\n      this._continuous = value;\n    }\n\n    get grammars() {\n      return this._grammars;\n    }\n\n    set grammars(value) {\n      if (value instanceof SpeechGrammarList) {\n        this._grammars = value;\n      } else {\n        throw new Error(`The provided value is not of type 'SpeechGrammarList'`);\n      }\n    }\n\n    get interimResults() {\n      return this._interimResults;\n    }\n\n    set interimResults(value) {\n      this._interimResults = value;\n    }\n\n    get maxAlternatives() {\n      return this._maxAlternatives;\n    }\n\n    set maxAlternatives(value) {\n      this._maxAlternatives = value;\n    }\n\n    get lang() {\n      return this._lang;\n    }\n\n    set lang(value) {\n      this._lang = value;\n    }\n\n    get onaudioend() {\n      return getEventAttributeValue(this, 'audioend');\n    }\n\n    set onaudioend(value) {\n      setEventAttributeValue(this, 'audioend', value);\n    }\n\n    get onaudiostart() {\n      return getEventAttributeValue(this, 'audiostart');\n    }\n\n    set onaudiostart(value) {\n      setEventAttributeValue(this, 'audiostart', value);\n    }\n\n    get oncognitiveservices() {\n      return getEventAttributeValue(this, 'cognitiveservices');\n    }\n\n    set oncognitiveservices(value) {\n      setEventAttributeValue(this, 'cognitiveservices', value);\n    }\n\n    get onend() {\n      return getEventAttributeValue(this, 'end');\n    }\n\n    set onend(value) {\n      setEventAttributeValue(this, 'end', value);\n    }\n\n    get onerror() {\n      return getEventAttributeValue(this, 'error');\n    }\n\n    set onerror(value) {\n      setEventAttributeValue(this, 'error', value);\n    }\n\n    get onresult() {\n      return getEventAttributeValue(this, 'result');\n    }\n\n    set onresult(value) {\n      setEventAttributeValue(this, 'result', value);\n    }\n\n    get onsoundend() {\n      return getEventAttributeValue(this, 'soundend');\n    }\n\n    set onsoundend(value) {\n      setEventAttributeValue(this, 'soundend', value);\n    }\n\n    get onsoundstart() {\n      return getEventAttributeValue(this, 'soundstart');\n    }\n\n    set onsoundstart(value) {\n      setEventAttributeValue(this, 'soundstart', value);\n    }\n\n    get onspeechend() {\n      return getEventAttributeValue(this, 'speechend');\n    }\n\n    set onspeechend(value) {\n      setEventAttributeValue(this, 'speechend', value);\n    }\n\n    get onspeechstart() {\n      return getEventAttributeValue(this, 'speechstart');\n    }\n\n    set onspeechstart(value) {\n      setEventAttributeValue(this, 'speechstart', value);\n    }\n\n    get onstart() {\n      return getEventAttributeValue(this, 'start');\n    }\n\n    set onstart(value) {\n      setEventAttributeValue(this, 'start', value);\n    }\n\n    start() {\n      this._startOnce().catch(err => {\n        this.dispatchEvent(new ErrorEvent('error', { error: err, message: err && (err.stack || err.message) }));\n      });\n    }\n\n    async _startOnce() {\n      // TODO: [P2] Should check if recognition is active, we should not start recognition twice\n      const recognizer = await createRecognizer(this.lang);\n\n      const { pause, unprepare } = prepareAudioConfig(recognizer.audioConfig);\n\n      try {\n        const queue = createPromiseQueue();\n        let soundStarted;\n        let speechStarted;\n        let stopping;\n\n        const { detach: detachAudioConfigEvent } = recognizer.audioConfig.events.attach(event => {\n          const { name } = event;\n\n          if (name === 'AudioSourceReadyEvent') {\n            queue.push({ audioSourceReady: {} });\n          } else if (name === 'AudioSourceOffEvent') {\n            queue.push({ audioSourceOff: {} });\n          } else if (name === 'FirstAudibleChunk') {\n            queue.push({ firstAudibleChunk: {} });\n          }\n        });\n\n        recognizer.canceled = (_, { errorDetails, offset, reason, sessionId }) => {\n          queue.push({\n            canceled: {\n              errorDetails,\n              offset,\n              reason,\n              sessionId\n            }\n          });\n        };\n\n        recognizer.recognized = (_, { offset, result, sessionId }) => {\n          queue.push({\n            recognized: {\n              offset,\n              result: serializeRecognitionResult(result),\n              sessionId\n            }\n          });\n        };\n\n        recognizer.recognizing = (_, { offset, result, sessionId }) => {\n          queue.push({\n            recognizing: {\n              offset,\n              result: serializeRecognitionResult(result),\n              sessionId\n            }\n          });\n        };\n\n        recognizer.sessionStarted = (_, { sessionId }) => {\n          queue.push({ sessionStarted: { sessionId } });\n        };\n\n        recognizer.sessionStopped = (_, { sessionId }) => {\n          // \"sessionStopped\" is never fired, probably because we are using startContinuousRecognitionAsync instead of recognizeOnceAsync.\n          queue.push({ sessionStopped: { sessionId } });\n        };\n\n        recognizer.speechStartDetected = (_, { offset, sessionId }) => {\n          queue.push({ speechStartDetected: { offset, sessionId } });\n        };\n\n        recognizer.speechEndDetected = (_, { sessionId }) => {\n          // \"speechEndDetected\" is never fired, probably because we are using startContinuousRecognitionAsync instead of recognizeOnceAsync.\n          // Update: \"speechEndDetected\" is fired for DLSpeech.listenOnceAsync()\n          queue.push({ speechEndDetected: { sessionId } });\n        };\n\n        const { phrases } = this.grammars;\n\n        // HACK: We are using the internal of SpeechRecognizer because they did not expose it\n        const { dynamicGrammar } = recognizer.privReco;\n\n        referenceGrammars && referenceGrammars.length && dynamicGrammar.addReferenceGrammar(referenceGrammars);\n        phrases && phrases.length && dynamicGrammar.addPhrase(phrases);\n\n        await cognitiveServicesAsyncToPromise(recognizer.startContinuousRecognitionAsync.bind(recognizer))();\n\n        if (recognizer.stopContinuousRecognitionAsync) {\n          this.abort = () => queue.push({ abort: {} });\n          this.stop = () => queue.push({ stop: {} });\n        } else {\n          this.abort = this.stop = undefined;\n        }\n\n        let audioStarted;\n        let finalEvent;\n        let finalizedResults = [];\n\n        for (let loop = 0; !stopping || audioStarted; loop++) {\n          const event = await queue.shift();\n          const {\n            abort,\n            audioSourceOff,\n            audioSourceReady,\n            canceled,\n            firstAudibleChunk,\n            recognized,\n            recognizing,\n            stop\n          } = event;\n\n          // We are emitting event \"cognitiveservices\" for debugging purpose.\n          Object.keys(event).forEach(name => this.emitCognitiveServices(name, event[name]));\n\n          const errorMessage = canceled && canceled.errorDetails;\n\n          if (/Permission\\sdenied/u.test(errorMessage || '')) {\n            // If microphone is not allowed, we should not emit \"start\" event.\n\n            finalEvent = {\n              error: 'not-allowed',\n              type: 'error'\n            };\n\n            break;\n          }\n\n          if (!loop) {\n            this.dispatchEvent(new SpeechRecognitionEvent('start'));\n          }\n\n          if (errorMessage) {\n            if (/1006/u.test(errorMessage)) {\n              if (!audioStarted) {\n                this.dispatchEvent(new SpeechRecognitionEvent('audiostart'));\n                this.dispatchEvent(new SpeechRecognitionEvent('audioend'));\n              }\n\n              finalEvent = {\n                error: 'network',\n                type: 'error'\n              };\n            } else {\n              finalEvent = {\n                error: 'unknown',\n                type: 'error'\n              };\n            }\n\n            break;\n          } else if (abort || stop) {\n            if (abort) {\n              finalEvent = {\n                error: 'aborted',\n                type: 'error'\n              };\n\n              // If we are aborting, we will ignore lingering recognizing/recognized events. But if we are stopping, we need them.\n              stopping = 'abort';\n            } else {\n              // When we pause, we will send { isEnd: true }, Speech Services will send us \"recognized\" event.\n              pause();\n              stopping = 'stop';\n            }\n\n            // Abort should not be dispatched without support of \"stopContinuousRecognitionAsync\".\n            // But for defensive purpose, we make sure \"stopContinuousRecognitionAsync\" is available before we can call.\n            if (abort && recognizer.stopContinuousRecognitionAsync) {\n              await cognitiveServicesAsyncToPromise(recognizer.stopContinuousRecognitionAsync.bind(recognizer))();\n            }\n          } else if (audioSourceReady) {\n            this.dispatchEvent(new SpeechRecognitionEvent('audiostart'));\n\n            audioStarted = true;\n          } else if (firstAudibleChunk) {\n            this.dispatchEvent(new SpeechRecognitionEvent('soundstart'));\n\n            soundStarted = true;\n          } else if (audioSourceOff) {\n            // Looks like we don't need this line and all the tests are still working.\n            // Guessing probably stopping is already truthy.\n            // stopping = true;\n\n            speechStarted && this.dispatchEvent(new SpeechRecognitionEvent('speechend'));\n            soundStarted && this.dispatchEvent(new SpeechRecognitionEvent('soundend'));\n            audioStarted && this.dispatchEvent(new SpeechRecognitionEvent('audioend'));\n\n            audioStarted = soundStarted = speechStarted = false;\n\n            break;\n          } else if (stopping !== 'abort') {\n            if (recognized && recognized.result && recognized.result.reason === ResultReason.NoMatch) {\n              finalEvent = {\n                error: 'no-speech',\n                type: 'error'\n              };\n            } else if (recognized || recognizing) {\n              if (!audioStarted) {\n                // Unconfirmed prevention of quirks\n                this.dispatchEvent(new SpeechRecognitionEvent('audiostart'));\n\n                audioStarted = true;\n              }\n\n              if (!soundStarted) {\n                this.dispatchEvent(new SpeechRecognitionEvent('soundstart'));\n\n                soundStarted = true;\n              }\n\n              if (!speechStarted) {\n                this.dispatchEvent(new SpeechRecognitionEvent('speechstart'));\n\n                speechStarted = true;\n              }\n\n              if (recognized) {\n                const result = cognitiveServiceEventResultToWebSpeechRecognitionResultList(recognized.result, {\n                  maxAlternatives: this.maxAlternatives,\n                  textNormalization\n                });\n\n                const recognizable = !!result[0].transcript;\n\n                if (recognizable) {\n                  finalizedResults = [...finalizedResults, result];\n\n                  this.continuous &&\n                    this.dispatchEvent(\n                      new SpeechRecognitionEvent('result', {\n                        results: finalizedResults\n                      })\n                    );\n                }\n\n                // If it is continuous, we just sent the finalized results. So we don't need to send it again after \"audioend\" event.\n                if (this.continuous && recognizable) {\n                  finalEvent = null;\n                } else {\n                  finalEvent = {\n                    results: finalizedResults,\n                    type: 'result'\n                  };\n                }\n\n                if (!this.continuous && recognizer.stopContinuousRecognitionAsync) {\n                  await cognitiveServicesAsyncToPromise(recognizer.stopContinuousRecognitionAsync.bind(recognizer))();\n                }\n\n                // If event order can be loosened, we can send the recognized event as soon as we receive it.\n                // 1. If it is not recognizable (no-speech), we should send an \"error\" event just before \"end\" event. We will not loosen \"error\" events.\n                if (looseEvents && finalEvent && recognizable) {\n                  this.dispatchEvent(new SpeechRecognitionEvent(finalEvent.type, finalEvent));\n                  finalEvent = null;\n                }\n              } else if (recognizing) {\n                this.interimResults &&\n                  this.dispatchEvent(\n                    new SpeechRecognitionEvent('result', {\n                      results: [\n                        ...finalizedResults,\n                        cognitiveServiceEventResultToWebSpeechRecognitionResultList(recognizing.result, {\n                          maxAlternatives: this.maxAlternatives,\n                          textNormalization\n                        })\n                      ]\n                    })\n                  );\n              }\n            }\n          }\n        }\n\n        if (speechStarted) {\n          this.dispatchEvent(new SpeechRecognitionEvent('speechend'));\n        }\n\n        if (soundStarted) {\n          this.dispatchEvent(new SpeechRecognitionEvent('soundend'));\n        }\n\n        if (audioStarted) {\n          this.dispatchEvent(new SpeechRecognitionEvent('audioend'));\n        }\n\n        if (finalEvent) {\n          if (finalEvent.type === 'result' && !finalEvent.results.length) {\n            finalEvent = {\n              error: 'no-speech',\n              type: 'error'\n            };\n          }\n\n          if (finalEvent.type === 'error') {\n            this.dispatchEvent(new ErrorEvent('error', finalEvent));\n          } else {\n            this.dispatchEvent(new SpeechRecognitionEvent(finalEvent.type, finalEvent));\n          }\n        }\n\n        // Even though there is no \"start\" event emitted, we will still emit \"end\" event\n        // This is mainly for \"microphone blocked\" story.\n        this.dispatchEvent(new SpeechRecognitionEvent('end'));\n\n        detachAudioConfigEvent();\n      } catch (err) {\n        // Logging out the erorr because Speech SDK would fail silently.\n        console.error(err);\n\n        throw err;\n      } finally {\n        unprepare();\n        recognizer.dispose();\n      }\n    }\n  }\n\n  return {\n    SpeechGrammarList,\n    SpeechRecognition,\n    SpeechRecognitionEvent\n  };\n}\n\nexport default options => {\n  const {\n    audioConfig = AudioConfig.fromDefaultMicrophoneInput(),\n\n    // We set telemetry to true to honor the default telemetry settings of Speech SDK\n    // https://github.com/Microsoft/cognitive-services-speech-sdk-js#data--telemetry\n    enableTelemetry = true,\n\n    fetchCredentials,\n    looseEvents,\n    referenceGrammars,\n    speechRecognitionEndpointId,\n    textNormalization = 'display'\n  } = patchOptions(options);\n\n  if (!audioConfig && (!window.navigator.mediaDevices || !window.navigator.mediaDevices.getUserMedia)) {\n    console.warn(\n      'web-speech-cognitive-services: This browser does not support WebRTC and it will not work with Cognitive Services Speech Services.'\n    );\n\n    return {};\n  }\n\n  const createRecognizer = async lang => {\n    const { authorizationToken, region, speechRecognitionHostname, subscriptionKey } = await fetchCredentials();\n    let speechConfig;\n\n    if (speechRecognitionHostname) {\n      const host = { hostname: speechRecognitionHostname, port: 443, protocol: 'wss:' };\n\n      if (authorizationToken) {\n        speechConfig = SpeechConfig.fromHost(host);\n        speechConfig.authorizationToken = authorizationToken;\n      } else {\n        speechConfig = SpeechConfig.fromHost(host, subscriptionKey);\n      }\n    } else {\n      speechConfig = authorizationToken\n        ? SpeechConfig.fromAuthorizationToken(authorizationToken, region)\n        : SpeechConfig.fromSubscription(subscriptionKey, region);\n    }\n\n    if (speechRecognitionEndpointId) {\n      speechConfig.endpointId = speechRecognitionEndpointId;\n    }\n\n    speechConfig.outputFormat = OutputFormat.Detailed;\n    speechConfig.speechRecognitionLanguage = lang || 'en-US';\n\n    return new SpeechRecognizer(speechConfig, audioConfig);\n  };\n\n  return createSpeechRecognitionPonyfillFromRecognizer({\n    audioConfig,\n    createRecognizer,\n    enableTelemetry,\n    looseEvents,\n    referenceGrammars,\n    textNormalization\n  });\n};\n"],"mappings":"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"}
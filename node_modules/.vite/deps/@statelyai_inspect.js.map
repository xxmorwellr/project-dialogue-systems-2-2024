{
  "version": 3,
  "sources": ["../../fast-safe-stringify/index.js", "../../safe-stable-stringify/index.js", "../../partysocket/dist/index.js", "../../superjson/src/double-indexed-kv.ts", "../../superjson/src/registry.ts", "../../superjson/src/class-registry.ts", "../../superjson/src/util.ts", "../../superjson/src/custom-transformer-registry.ts", "../../superjson/src/is.ts", "../../superjson/src/pathstringifier.ts", "../../superjson/src/transformer.ts", "../../superjson/src/accessDeep.ts", "../../superjson/src/plainer.ts", "../../is-what/dist/index.js", "../../copy-anything/dist/index.js", "../../superjson/src/index.ts", "../../isomorphic-ws/browser.js", "../../@statelyai/inspect/dist/index.js"],
  "sourcesContent": ["module.exports = stringify\nstringify.default = stringify\nstringify.stable = deterministicStringify\nstringify.stableStringify = deterministicStringify\n\nvar LIMIT_REPLACE_NODE = '[...]'\nvar CIRCULAR_REPLACE_NODE = '[Circular]'\n\nvar arr = []\nvar replacerStack = []\n\nfunction defaultOptions () {\n  return {\n    depthLimit: Number.MAX_SAFE_INTEGER,\n    edgesLimit: Number.MAX_SAFE_INTEGER\n  }\n}\n\n// Regular stringify\nfunction stringify (obj, replacer, spacer, options) {\n  if (typeof options === 'undefined') {\n    options = defaultOptions()\n  }\n\n  decirc(obj, '', 0, [], undefined, 0, options)\n  var res\n  try {\n    if (replacerStack.length === 0) {\n      res = JSON.stringify(obj, replacer, spacer)\n    } else {\n      res = JSON.stringify(obj, replaceGetterValues(replacer), spacer)\n    }\n  } catch (_) {\n    return JSON.stringify('[unable to serialize, circular reference is too complex to analyze]')\n  } finally {\n    while (arr.length !== 0) {\n      var part = arr.pop()\n      if (part.length === 4) {\n        Object.defineProperty(part[0], part[1], part[3])\n      } else {\n        part[0][part[1]] = part[2]\n      }\n    }\n  }\n  return res\n}\n\nfunction setReplace (replace, val, k, parent) {\n  var propertyDescriptor = Object.getOwnPropertyDescriptor(parent, k)\n  if (propertyDescriptor.get !== undefined) {\n    if (propertyDescriptor.configurable) {\n      Object.defineProperty(parent, k, { value: replace })\n      arr.push([parent, k, val, propertyDescriptor])\n    } else {\n      replacerStack.push([val, k, replace])\n    }\n  } else {\n    parent[k] = replace\n    arr.push([parent, k, val])\n  }\n}\n\nfunction decirc (val, k, edgeIndex, stack, parent, depth, options) {\n  depth += 1\n  var i\n  if (typeof val === 'object' && val !== null) {\n    for (i = 0; i < stack.length; i++) {\n      if (stack[i] === val) {\n        setReplace(CIRCULAR_REPLACE_NODE, val, k, parent)\n        return\n      }\n    }\n\n    if (\n      typeof options.depthLimit !== 'undefined' &&\n      depth > options.depthLimit\n    ) {\n      setReplace(LIMIT_REPLACE_NODE, val, k, parent)\n      return\n    }\n\n    if (\n      typeof options.edgesLimit !== 'undefined' &&\n      edgeIndex + 1 > options.edgesLimit\n    ) {\n      setReplace(LIMIT_REPLACE_NODE, val, k, parent)\n      return\n    }\n\n    stack.push(val)\n    // Optimize for Arrays. Big arrays could kill the performance otherwise!\n    if (Array.isArray(val)) {\n      for (i = 0; i < val.length; i++) {\n        decirc(val[i], i, i, stack, val, depth, options)\n      }\n    } else {\n      var keys = Object.keys(val)\n      for (i = 0; i < keys.length; i++) {\n        var key = keys[i]\n        decirc(val[key], key, i, stack, val, depth, options)\n      }\n    }\n    stack.pop()\n  }\n}\n\n// Stable-stringify\nfunction compareFunction (a, b) {\n  if (a < b) {\n    return -1\n  }\n  if (a > b) {\n    return 1\n  }\n  return 0\n}\n\nfunction deterministicStringify (obj, replacer, spacer, options) {\n  if (typeof options === 'undefined') {\n    options = defaultOptions()\n  }\n\n  var tmp = deterministicDecirc(obj, '', 0, [], undefined, 0, options) || obj\n  var res\n  try {\n    if (replacerStack.length === 0) {\n      res = JSON.stringify(tmp, replacer, spacer)\n    } else {\n      res = JSON.stringify(tmp, replaceGetterValues(replacer), spacer)\n    }\n  } catch (_) {\n    return JSON.stringify('[unable to serialize, circular reference is too complex to analyze]')\n  } finally {\n    // Ensure that we restore the object as it was.\n    while (arr.length !== 0) {\n      var part = arr.pop()\n      if (part.length === 4) {\n        Object.defineProperty(part[0], part[1], part[3])\n      } else {\n        part[0][part[1]] = part[2]\n      }\n    }\n  }\n  return res\n}\n\nfunction deterministicDecirc (val, k, edgeIndex, stack, parent, depth, options) {\n  depth += 1\n  var i\n  if (typeof val === 'object' && val !== null) {\n    for (i = 0; i < stack.length; i++) {\n      if (stack[i] === val) {\n        setReplace(CIRCULAR_REPLACE_NODE, val, k, parent)\n        return\n      }\n    }\n    try {\n      if (typeof val.toJSON === 'function') {\n        return\n      }\n    } catch (_) {\n      return\n    }\n\n    if (\n      typeof options.depthLimit !== 'undefined' &&\n      depth > options.depthLimit\n    ) {\n      setReplace(LIMIT_REPLACE_NODE, val, k, parent)\n      return\n    }\n\n    if (\n      typeof options.edgesLimit !== 'undefined' &&\n      edgeIndex + 1 > options.edgesLimit\n    ) {\n      setReplace(LIMIT_REPLACE_NODE, val, k, parent)\n      return\n    }\n\n    stack.push(val)\n    // Optimize for Arrays. Big arrays could kill the performance otherwise!\n    if (Array.isArray(val)) {\n      for (i = 0; i < val.length; i++) {\n        deterministicDecirc(val[i], i, i, stack, val, depth, options)\n      }\n    } else {\n      // Create a temporary object in the required way\n      var tmp = {}\n      var keys = Object.keys(val).sort(compareFunction)\n      for (i = 0; i < keys.length; i++) {\n        var key = keys[i]\n        deterministicDecirc(val[key], key, i, stack, val, depth, options)\n        tmp[key] = val[key]\n      }\n      if (typeof parent !== 'undefined') {\n        arr.push([parent, k, val])\n        parent[k] = tmp\n      } else {\n        return tmp\n      }\n    }\n    stack.pop()\n  }\n}\n\n// wraps replacer function to handle values we couldn't replace\n// and mark them as replaced value\nfunction replaceGetterValues (replacer) {\n  replacer =\n    typeof replacer !== 'undefined'\n      ? replacer\n      : function (k, v) {\n        return v\n      }\n  return function (key, val) {\n    if (replacerStack.length > 0) {\n      for (var i = 0; i < replacerStack.length; i++) {\n        var part = replacerStack[i]\n        if (part[1] === key && part[0] === val) {\n          val = part[2]\n          replacerStack.splice(i, 1)\n          break\n        }\n      }\n    }\n    return replacer.call(this, key, val)\n  }\n}\n", "'use strict'\n\nconst { hasOwnProperty } = Object.prototype\n\nconst stringify = configure()\n\n// @ts-expect-error\nstringify.configure = configure\n// @ts-expect-error\nstringify.stringify = stringify\n\n// @ts-expect-error\nstringify.default = stringify\n\n// @ts-expect-error used for named export\nexports.stringify = stringify\n// @ts-expect-error used for named export\nexports.configure = configure\n\nmodule.exports = stringify\n\n// eslint-disable-next-line no-control-regex\nconst strEscapeSequencesRegExp = /[\\u0000-\\u001f\\u0022\\u005c\\ud800-\\udfff]/\n\n// Escape C0 control characters, double quotes, the backslash and every code\n// unit with a numeric value in the inclusive range 0xD800 to 0xDFFF.\nfunction strEscape (str) {\n  // Some magic numbers that worked out fine while benchmarking with v8 8.0\n  if (str.length < 5000 && !strEscapeSequencesRegExp.test(str)) {\n    return `\"${str}\"`\n  }\n  return JSON.stringify(str)\n}\n\nfunction sort (array, comparator) {\n  // Insertion sort is very efficient for small input sizes, but it has a bad\n  // worst case complexity. Thus, use native array sort for bigger values.\n  if (array.length > 2e2 || comparator) {\n    return array.sort(comparator)\n  }\n  for (let i = 1; i < array.length; i++) {\n    const currentValue = array[i]\n    let position = i\n    while (position !== 0 && array[position - 1] > currentValue) {\n      array[position] = array[position - 1]\n      position--\n    }\n    array[position] = currentValue\n  }\n  return array\n}\n\nconst typedArrayPrototypeGetSymbolToStringTag =\n  Object.getOwnPropertyDescriptor(\n    Object.getPrototypeOf(\n      Object.getPrototypeOf(\n        new Int8Array()\n      )\n    ),\n    Symbol.toStringTag\n  ).get\n\nfunction isTypedArrayWithEntries (value) {\n  return typedArrayPrototypeGetSymbolToStringTag.call(value) !== undefined && value.length !== 0\n}\n\nfunction stringifyTypedArray (array, separator, maximumBreadth) {\n  if (array.length < maximumBreadth) {\n    maximumBreadth = array.length\n  }\n  const whitespace = separator === ',' ? '' : ' '\n  let res = `\"0\":${whitespace}${array[0]}`\n  for (let i = 1; i < maximumBreadth; i++) {\n    res += `${separator}\"${i}\":${whitespace}${array[i]}`\n  }\n  return res\n}\n\nfunction getCircularValueOption (options) {\n  if (hasOwnProperty.call(options, 'circularValue')) {\n    const circularValue = options.circularValue\n    if (typeof circularValue === 'string') {\n      return `\"${circularValue}\"`\n    }\n    if (circularValue == null) {\n      return circularValue\n    }\n    if (circularValue === Error || circularValue === TypeError) {\n      return {\n        toString () {\n          throw new TypeError('Converting circular structure to JSON')\n        }\n      }\n    }\n    throw new TypeError('The \"circularValue\" argument must be of type string or the value null or undefined')\n  }\n  return '\"[Circular]\"'\n}\n\nfunction getDeterministicOption (options) {\n  let value\n  if (hasOwnProperty.call(options, 'deterministic')) {\n    value = options.deterministic\n    if (typeof value !== 'boolean' && typeof value !== 'function') {\n      throw new TypeError('The \"deterministic\" argument must be of type boolean or comparator function')\n    }\n  }\n  return value === undefined ? true : value\n}\n\nfunction getBooleanOption (options, key) {\n  let value\n  if (hasOwnProperty.call(options, key)) {\n    value = options[key]\n    if (typeof value !== 'boolean') {\n      throw new TypeError(`The \"${key}\" argument must be of type boolean`)\n    }\n  }\n  return value === undefined ? true : value\n}\n\nfunction getPositiveIntegerOption (options, key) {\n  let value\n  if (hasOwnProperty.call(options, key)) {\n    value = options[key]\n    if (typeof value !== 'number') {\n      throw new TypeError(`The \"${key}\" argument must be of type number`)\n    }\n    if (!Number.isInteger(value)) {\n      throw new TypeError(`The \"${key}\" argument must be an integer`)\n    }\n    if (value < 1) {\n      throw new RangeError(`The \"${key}\" argument must be >= 1`)\n    }\n  }\n  return value === undefined ? Infinity : value\n}\n\nfunction getItemCount (number) {\n  if (number === 1) {\n    return '1 item'\n  }\n  return `${number} items`\n}\n\nfunction getUniqueReplacerSet (replacerArray) {\n  const replacerSet = new Set()\n  for (const value of replacerArray) {\n    if (typeof value === 'string' || typeof value === 'number') {\n      replacerSet.add(String(value))\n    }\n  }\n  return replacerSet\n}\n\nfunction getStrictOption (options) {\n  if (hasOwnProperty.call(options, 'strict')) {\n    const value = options.strict\n    if (typeof value !== 'boolean') {\n      throw new TypeError('The \"strict\" argument must be of type boolean')\n    }\n    if (value) {\n      return (value) => {\n        let message = `Object can not safely be stringified. Received type ${typeof value}`\n        if (typeof value !== 'function') message += ` (${value.toString()})`\n        throw new Error(message)\n      }\n    }\n  }\n}\n\nfunction configure (options) {\n  options = { ...options }\n  const fail = getStrictOption(options)\n  if (fail) {\n    if (options.bigint === undefined) {\n      options.bigint = false\n    }\n    if (!('circularValue' in options)) {\n      options.circularValue = Error\n    }\n  }\n  const circularValue = getCircularValueOption(options)\n  const bigint = getBooleanOption(options, 'bigint')\n  const deterministic = getDeterministicOption(options)\n  const comparator = typeof deterministic === 'function' ? deterministic : undefined\n  const maximumDepth = getPositiveIntegerOption(options, 'maximumDepth')\n  const maximumBreadth = getPositiveIntegerOption(options, 'maximumBreadth')\n\n  function stringifyFnReplacer (key, parent, stack, replacer, spacer, indentation) {\n    let value = parent[key]\n\n    if (typeof value === 'object' && value !== null && typeof value.toJSON === 'function') {\n      value = value.toJSON(key)\n    }\n    value = replacer.call(parent, key, value)\n\n    switch (typeof value) {\n      case 'string':\n        return strEscape(value)\n      case 'object': {\n        if (value === null) {\n          return 'null'\n        }\n        if (stack.indexOf(value) !== -1) {\n          return circularValue\n        }\n\n        let res = ''\n        let join = ','\n        const originalIndentation = indentation\n\n        if (Array.isArray(value)) {\n          if (value.length === 0) {\n            return '[]'\n          }\n          if (maximumDepth < stack.length + 1) {\n            return '\"[Array]\"'\n          }\n          stack.push(value)\n          if (spacer !== '') {\n            indentation += spacer\n            res += `\\n${indentation}`\n            join = `,\\n${indentation}`\n          }\n          const maximumValuesToStringify = Math.min(value.length, maximumBreadth)\n          let i = 0\n          for (; i < maximumValuesToStringify - 1; i++) {\n            const tmp = stringifyFnReplacer(String(i), value, stack, replacer, spacer, indentation)\n            res += tmp !== undefined ? tmp : 'null'\n            res += join\n          }\n          const tmp = stringifyFnReplacer(String(i), value, stack, replacer, spacer, indentation)\n          res += tmp !== undefined ? tmp : 'null'\n          if (value.length - 1 > maximumBreadth) {\n            const removedKeys = value.length - maximumBreadth - 1\n            res += `${join}\"... ${getItemCount(removedKeys)} not stringified\"`\n          }\n          if (spacer !== '') {\n            res += `\\n${originalIndentation}`\n          }\n          stack.pop()\n          return `[${res}]`\n        }\n\n        let keys = Object.keys(value)\n        const keyLength = keys.length\n        if (keyLength === 0) {\n          return '{}'\n        }\n        if (maximumDepth < stack.length + 1) {\n          return '\"[Object]\"'\n        }\n        let whitespace = ''\n        let separator = ''\n        if (spacer !== '') {\n          indentation += spacer\n          join = `,\\n${indentation}`\n          whitespace = ' '\n        }\n        const maximumPropertiesToStringify = Math.min(keyLength, maximumBreadth)\n        if (deterministic && !isTypedArrayWithEntries(value)) {\n          keys = sort(keys, comparator)\n        }\n        stack.push(value)\n        for (let i = 0; i < maximumPropertiesToStringify; i++) {\n          const key = keys[i]\n          const tmp = stringifyFnReplacer(key, value, stack, replacer, spacer, indentation)\n          if (tmp !== undefined) {\n            res += `${separator}${strEscape(key)}:${whitespace}${tmp}`\n            separator = join\n          }\n        }\n        if (keyLength > maximumBreadth) {\n          const removedKeys = keyLength - maximumBreadth\n          res += `${separator}\"...\":${whitespace}\"${getItemCount(removedKeys)} not stringified\"`\n          separator = join\n        }\n        if (spacer !== '' && separator.length > 1) {\n          res = `\\n${indentation}${res}\\n${originalIndentation}`\n        }\n        stack.pop()\n        return `{${res}}`\n      }\n      case 'number':\n        return isFinite(value) ? String(value) : fail ? fail(value) : 'null'\n      case 'boolean':\n        return value === true ? 'true' : 'false'\n      case 'undefined':\n        return undefined\n      case 'bigint':\n        if (bigint) {\n          return String(value)\n        }\n        // fallthrough\n      default:\n        return fail ? fail(value) : undefined\n    }\n  }\n\n  function stringifyArrayReplacer (key, value, stack, replacer, spacer, indentation) {\n    if (typeof value === 'object' && value !== null && typeof value.toJSON === 'function') {\n      value = value.toJSON(key)\n    }\n\n    switch (typeof value) {\n      case 'string':\n        return strEscape(value)\n      case 'object': {\n        if (value === null) {\n          return 'null'\n        }\n        if (stack.indexOf(value) !== -1) {\n          return circularValue\n        }\n\n        const originalIndentation = indentation\n        let res = ''\n        let join = ','\n\n        if (Array.isArray(value)) {\n          if (value.length === 0) {\n            return '[]'\n          }\n          if (maximumDepth < stack.length + 1) {\n            return '\"[Array]\"'\n          }\n          stack.push(value)\n          if (spacer !== '') {\n            indentation += spacer\n            res += `\\n${indentation}`\n            join = `,\\n${indentation}`\n          }\n          const maximumValuesToStringify = Math.min(value.length, maximumBreadth)\n          let i = 0\n          for (; i < maximumValuesToStringify - 1; i++) {\n            const tmp = stringifyArrayReplacer(String(i), value[i], stack, replacer, spacer, indentation)\n            res += tmp !== undefined ? tmp : 'null'\n            res += join\n          }\n          const tmp = stringifyArrayReplacer(String(i), value[i], stack, replacer, spacer, indentation)\n          res += tmp !== undefined ? tmp : 'null'\n          if (value.length - 1 > maximumBreadth) {\n            const removedKeys = value.length - maximumBreadth - 1\n            res += `${join}\"... ${getItemCount(removedKeys)} not stringified\"`\n          }\n          if (spacer !== '') {\n            res += `\\n${originalIndentation}`\n          }\n          stack.pop()\n          return `[${res}]`\n        }\n        stack.push(value)\n        let whitespace = ''\n        if (spacer !== '') {\n          indentation += spacer\n          join = `,\\n${indentation}`\n          whitespace = ' '\n        }\n        let separator = ''\n        for (const key of replacer) {\n          const tmp = stringifyArrayReplacer(key, value[key], stack, replacer, spacer, indentation)\n          if (tmp !== undefined) {\n            res += `${separator}${strEscape(key)}:${whitespace}${tmp}`\n            separator = join\n          }\n        }\n        if (spacer !== '' && separator.length > 1) {\n          res = `\\n${indentation}${res}\\n${originalIndentation}`\n        }\n        stack.pop()\n        return `{${res}}`\n      }\n      case 'number':\n        return isFinite(value) ? String(value) : fail ? fail(value) : 'null'\n      case 'boolean':\n        return value === true ? 'true' : 'false'\n      case 'undefined':\n        return undefined\n      case 'bigint':\n        if (bigint) {\n          return String(value)\n        }\n        // fallthrough\n      default:\n        return fail ? fail(value) : undefined\n    }\n  }\n\n  function stringifyIndent (key, value, stack, spacer, indentation) {\n    switch (typeof value) {\n      case 'string':\n        return strEscape(value)\n      case 'object': {\n        if (value === null) {\n          return 'null'\n        }\n        if (typeof value.toJSON === 'function') {\n          value = value.toJSON(key)\n          // Prevent calling `toJSON` again.\n          if (typeof value !== 'object') {\n            return stringifyIndent(key, value, stack, spacer, indentation)\n          }\n          if (value === null) {\n            return 'null'\n          }\n        }\n        if (stack.indexOf(value) !== -1) {\n          return circularValue\n        }\n        const originalIndentation = indentation\n\n        if (Array.isArray(value)) {\n          if (value.length === 0) {\n            return '[]'\n          }\n          if (maximumDepth < stack.length + 1) {\n            return '\"[Array]\"'\n          }\n          stack.push(value)\n          indentation += spacer\n          let res = `\\n${indentation}`\n          const join = `,\\n${indentation}`\n          const maximumValuesToStringify = Math.min(value.length, maximumBreadth)\n          let i = 0\n          for (; i < maximumValuesToStringify - 1; i++) {\n            const tmp = stringifyIndent(String(i), value[i], stack, spacer, indentation)\n            res += tmp !== undefined ? tmp : 'null'\n            res += join\n          }\n          const tmp = stringifyIndent(String(i), value[i], stack, spacer, indentation)\n          res += tmp !== undefined ? tmp : 'null'\n          if (value.length - 1 > maximumBreadth) {\n            const removedKeys = value.length - maximumBreadth - 1\n            res += `${join}\"... ${getItemCount(removedKeys)} not stringified\"`\n          }\n          res += `\\n${originalIndentation}`\n          stack.pop()\n          return `[${res}]`\n        }\n\n        let keys = Object.keys(value)\n        const keyLength = keys.length\n        if (keyLength === 0) {\n          return '{}'\n        }\n        if (maximumDepth < stack.length + 1) {\n          return '\"[Object]\"'\n        }\n        indentation += spacer\n        const join = `,\\n${indentation}`\n        let res = ''\n        let separator = ''\n        let maximumPropertiesToStringify = Math.min(keyLength, maximumBreadth)\n        if (isTypedArrayWithEntries(value)) {\n          res += stringifyTypedArray(value, join, maximumBreadth)\n          keys = keys.slice(value.length)\n          maximumPropertiesToStringify -= value.length\n          separator = join\n        }\n        if (deterministic) {\n          keys = sort(keys, comparator)\n        }\n        stack.push(value)\n        for (let i = 0; i < maximumPropertiesToStringify; i++) {\n          const key = keys[i]\n          const tmp = stringifyIndent(key, value[key], stack, spacer, indentation)\n          if (tmp !== undefined) {\n            res += `${separator}${strEscape(key)}: ${tmp}`\n            separator = join\n          }\n        }\n        if (keyLength > maximumBreadth) {\n          const removedKeys = keyLength - maximumBreadth\n          res += `${separator}\"...\": \"${getItemCount(removedKeys)} not stringified\"`\n          separator = join\n        }\n        if (separator !== '') {\n          res = `\\n${indentation}${res}\\n${originalIndentation}`\n        }\n        stack.pop()\n        return `{${res}}`\n      }\n      case 'number':\n        return isFinite(value) ? String(value) : fail ? fail(value) : 'null'\n      case 'boolean':\n        return value === true ? 'true' : 'false'\n      case 'undefined':\n        return undefined\n      case 'bigint':\n        if (bigint) {\n          return String(value)\n        }\n        // fallthrough\n      default:\n        return fail ? fail(value) : undefined\n    }\n  }\n\n  function stringifySimple (key, value, stack) {\n    switch (typeof value) {\n      case 'string':\n        return strEscape(value)\n      case 'object': {\n        if (value === null) {\n          return 'null'\n        }\n        if (typeof value.toJSON === 'function') {\n          value = value.toJSON(key)\n          // Prevent calling `toJSON` again\n          if (typeof value !== 'object') {\n            return stringifySimple(key, value, stack)\n          }\n          if (value === null) {\n            return 'null'\n          }\n        }\n        if (stack.indexOf(value) !== -1) {\n          return circularValue\n        }\n\n        let res = ''\n\n        const hasLength = value.length !== undefined\n        if (hasLength && Array.isArray(value)) {\n          if (value.length === 0) {\n            return '[]'\n          }\n          if (maximumDepth < stack.length + 1) {\n            return '\"[Array]\"'\n          }\n          stack.push(value)\n          const maximumValuesToStringify = Math.min(value.length, maximumBreadth)\n          let i = 0\n          for (; i < maximumValuesToStringify - 1; i++) {\n            const tmp = stringifySimple(String(i), value[i], stack)\n            res += tmp !== undefined ? tmp : 'null'\n            res += ','\n          }\n          const tmp = stringifySimple(String(i), value[i], stack)\n          res += tmp !== undefined ? tmp : 'null'\n          if (value.length - 1 > maximumBreadth) {\n            const removedKeys = value.length - maximumBreadth - 1\n            res += `,\"... ${getItemCount(removedKeys)} not stringified\"`\n          }\n          stack.pop()\n          return `[${res}]`\n        }\n\n        let keys = Object.keys(value)\n        const keyLength = keys.length\n        if (keyLength === 0) {\n          return '{}'\n        }\n        if (maximumDepth < stack.length + 1) {\n          return '\"[Object]\"'\n        }\n        let separator = ''\n        let maximumPropertiesToStringify = Math.min(keyLength, maximumBreadth)\n        if (hasLength && isTypedArrayWithEntries(value)) {\n          res += stringifyTypedArray(value, ',', maximumBreadth)\n          keys = keys.slice(value.length)\n          maximumPropertiesToStringify -= value.length\n          separator = ','\n        }\n        if (deterministic) {\n          keys = sort(keys, comparator)\n        }\n        stack.push(value)\n        for (let i = 0; i < maximumPropertiesToStringify; i++) {\n          const key = keys[i]\n          const tmp = stringifySimple(key, value[key], stack)\n          if (tmp !== undefined) {\n            res += `${separator}${strEscape(key)}:${tmp}`\n            separator = ','\n          }\n        }\n        if (keyLength > maximumBreadth) {\n          const removedKeys = keyLength - maximumBreadth\n          res += `${separator}\"...\":\"${getItemCount(removedKeys)} not stringified\"`\n        }\n        stack.pop()\n        return `{${res}}`\n      }\n      case 'number':\n        return isFinite(value) ? String(value) : fail ? fail(value) : 'null'\n      case 'boolean':\n        return value === true ? 'true' : 'false'\n      case 'undefined':\n        return undefined\n      case 'bigint':\n        if (bigint) {\n          return String(value)\n        }\n        // fallthrough\n      default:\n        return fail ? fail(value) : undefined\n    }\n  }\n\n  function stringify (value, replacer, space) {\n    if (arguments.length > 1) {\n      let spacer = ''\n      if (typeof space === 'number') {\n        spacer = ' '.repeat(Math.min(space, 10))\n      } else if (typeof space === 'string') {\n        spacer = space.slice(0, 10)\n      }\n      if (replacer != null) {\n        if (typeof replacer === 'function') {\n          return stringifyFnReplacer('', { '': value }, [], replacer, spacer, '')\n        }\n        if (Array.isArray(replacer)) {\n          return stringifyArrayReplacer('', value, [], getUniqueReplacerSet(replacer), spacer, '')\n        }\n      }\n      if (spacer.length !== 0) {\n        return stringifyIndent('', value, [], spacer, '')\n      }\n    }\n    return stringifySimple('', value, [])\n  }\n\n  return stringify\n}\n", "\"use strict\";\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  WebSocket: () => ReconnectingWebSocket,\n  default: () => PartySocket\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/ws.ts\nif (!globalThis.EventTarget || !globalThis.Event) {\n  console.error(`\n  PartySocket requires a global 'EventTarget' class to be available!\n  You can polyfill this global by adding this to your code before any partysocket imports: \n  \n  \\`\\`\\`\n  import 'partysocket/event-target-polyfill';\n  \\`\\`\\`\n  Please file an issue at https://github.com/partykit/partykit if you're still having trouble.\n`);\n}\nvar ErrorEvent = class extends Event {\n  message;\n  error;\n  constructor(error, target) {\n    super(\"error\", target);\n    this.message = error.message;\n    this.error = error;\n  }\n};\nvar CloseEvent = class extends Event {\n  code;\n  reason;\n  wasClean = true;\n  constructor(code = 1e3, reason = \"\", target) {\n    super(\"close\", target);\n    this.code = code;\n    this.reason = reason;\n  }\n};\nvar Events = {\n  Event,\n  ErrorEvent,\n  CloseEvent\n};\nfunction assert(condition, msg) {\n  if (!condition) {\n    throw new Error(msg);\n  }\n}\nfunction cloneEventBrowser(e) {\n  return new e.constructor(e.type, e);\n}\nfunction cloneEventNode(e) {\n  if (\"data\" in e) {\n    const evt2 = new MessageEvent(e.type, e);\n    return evt2;\n  }\n  if (\"code\" in e || \"reason\" in e) {\n    const evt2 = new CloseEvent(\n      // @ts-expect-error we need to fix event/listener types\n      e.code || 1999,\n      // @ts-expect-error we need to fix event/listener types\n      e.reason || \"unknown reason\",\n      e\n    );\n    return evt2;\n  }\n  if (\"error\" in e) {\n    const evt2 = new ErrorEvent(e.error, e);\n    return evt2;\n  }\n  const evt = new Event(e.type, e);\n  return evt;\n}\nvar isNode = typeof process !== \"undefined\" && typeof process.versions?.node !== \"undefined\" && typeof document === \"undefined\";\nvar cloneEvent = isNode ? cloneEventNode : cloneEventBrowser;\nvar DEFAULT = {\n  maxReconnectionDelay: 1e4,\n  minReconnectionDelay: 1e3 + Math.random() * 4e3,\n  minUptime: 5e3,\n  reconnectionDelayGrowFactor: 1.3,\n  connectionTimeout: 4e3,\n  maxRetries: Infinity,\n  maxEnqueuedMessages: Infinity,\n  startClosed: false,\n  debug: false\n};\nvar didWarnAboutMissingWebSocket = false;\nvar ReconnectingWebSocket = class _ReconnectingWebSocket extends EventTarget {\n  _ws;\n  _retryCount = -1;\n  _uptimeTimeout;\n  _connectTimeout;\n  _shouldReconnect = true;\n  _connectLock = false;\n  _binaryType = \"blob\";\n  _closeCalled = false;\n  _messageQueue = [];\n  _debugLogger = console.log.bind(console);\n  _url;\n  _protocols;\n  _options;\n  constructor(url, protocols, options = {}) {\n    super();\n    this._url = url;\n    this._protocols = protocols;\n    this._options = options;\n    if (this._options.startClosed) {\n      this._shouldReconnect = false;\n    }\n    if (this._options.debugLogger) {\n      this._debugLogger = this._options.debugLogger;\n    }\n    this._connect();\n  }\n  static get CONNECTING() {\n    return 0;\n  }\n  static get OPEN() {\n    return 1;\n  }\n  static get CLOSING() {\n    return 2;\n  }\n  static get CLOSED() {\n    return 3;\n  }\n  get CONNECTING() {\n    return _ReconnectingWebSocket.CONNECTING;\n  }\n  get OPEN() {\n    return _ReconnectingWebSocket.OPEN;\n  }\n  get CLOSING() {\n    return _ReconnectingWebSocket.CLOSING;\n  }\n  get CLOSED() {\n    return _ReconnectingWebSocket.CLOSED;\n  }\n  get binaryType() {\n    return this._ws ? this._ws.binaryType : this._binaryType;\n  }\n  set binaryType(value) {\n    this._binaryType = value;\n    if (this._ws) {\n      this._ws.binaryType = value;\n    }\n  }\n  /**\n   * Returns the number or connection retries\n   */\n  get retryCount() {\n    return Math.max(this._retryCount, 0);\n  }\n  /**\n   * The number of bytes of data that have been queued using calls to send() but not yet\n   * transmitted to the network. This value resets to zero once all queued data has been sent.\n   * This value does not reset to zero when the connection is closed; if you keep calling send(),\n   * this will continue to climb. Read only\n   */\n  get bufferedAmount() {\n    const bytes = this._messageQueue.reduce((acc, message) => {\n      if (typeof message === \"string\") {\n        acc += message.length;\n      } else if (message instanceof Blob) {\n        acc += message.size;\n      } else {\n        acc += message.byteLength;\n      }\n      return acc;\n    }, 0);\n    return bytes + (this._ws ? this._ws.bufferedAmount : 0);\n  }\n  /**\n   * The extensions selected by the server. This is currently only the empty string or a list of\n   * extensions as negotiated by the connection\n   */\n  get extensions() {\n    return this._ws ? this._ws.extensions : \"\";\n  }\n  /**\n   * A string indicating the name of the sub-protocol the server selected;\n   * this will be one of the strings specified in the protocols parameter when creating the\n   * WebSocket object\n   */\n  get protocol() {\n    return this._ws ? this._ws.protocol : \"\";\n  }\n  /**\n   * The current state of the connection; this is one of the Ready state constants\n   */\n  get readyState() {\n    if (this._ws) {\n      return this._ws.readyState;\n    }\n    return this._options.startClosed ? _ReconnectingWebSocket.CLOSED : _ReconnectingWebSocket.CONNECTING;\n  }\n  /**\n   * The URL as resolved by the constructor\n   */\n  get url() {\n    return this._ws ? this._ws.url : \"\";\n  }\n  /**\n   * Whether the websocket object is now in reconnectable state\n   */\n  get shouldReconnect() {\n    return this._shouldReconnect;\n  }\n  /**\n   * An event listener to be called when the WebSocket connection's readyState changes to CLOSED\n   */\n  onclose = null;\n  /**\n   * An event listener to be called when an error occurs\n   */\n  onerror = null;\n  /**\n   * An event listener to be called when a message is received from the server\n   */\n  onmessage = null;\n  /**\n   * An event listener to be called when the WebSocket connection's readyState changes to OPEN;\n   * this indicates that the connection is ready to send and receive data\n   */\n  onopen = null;\n  /**\n   * Closes the WebSocket connection or connection attempt, if any. If the connection is already\n   * CLOSED, this method does nothing\n   */\n  close(code = 1e3, reason) {\n    this._closeCalled = true;\n    this._shouldReconnect = false;\n    this._clearTimeouts();\n    if (!this._ws) {\n      this._debug(\"close enqueued: no ws instance\");\n      return;\n    }\n    if (this._ws.readyState === this.CLOSED) {\n      this._debug(\"close: already closed\");\n      return;\n    }\n    this._ws.close(code, reason);\n  }\n  /**\n   * Closes the WebSocket connection or connection attempt and connects again.\n   * Resets retry counter;\n   */\n  reconnect(code, reason) {\n    this._shouldReconnect = true;\n    this._closeCalled = false;\n    this._retryCount = -1;\n    if (!this._ws || this._ws.readyState === this.CLOSED) {\n      this._connect();\n    } else {\n      this._disconnect(code, reason);\n      this._connect();\n    }\n  }\n  /**\n   * Enqueue specified data to be transmitted to the server over the WebSocket connection\n   */\n  send(data) {\n    if (this._ws && this._ws.readyState === this.OPEN) {\n      this._debug(\"send\", data);\n      this._ws.send(data);\n    } else {\n      const { maxEnqueuedMessages = DEFAULT.maxEnqueuedMessages } = this._options;\n      if (this._messageQueue.length < maxEnqueuedMessages) {\n        this._debug(\"enqueue\", data);\n        this._messageQueue.push(data);\n      }\n    }\n  }\n  _debug(...args) {\n    if (this._options.debug) {\n      this._debugLogger(\"RWS>\", ...args);\n    }\n  }\n  _getNextDelay() {\n    const {\n      reconnectionDelayGrowFactor = DEFAULT.reconnectionDelayGrowFactor,\n      minReconnectionDelay = DEFAULT.minReconnectionDelay,\n      maxReconnectionDelay = DEFAULT.maxReconnectionDelay\n    } = this._options;\n    let delay = 0;\n    if (this._retryCount > 0) {\n      delay = minReconnectionDelay * Math.pow(reconnectionDelayGrowFactor, this._retryCount - 1);\n      if (delay > maxReconnectionDelay) {\n        delay = maxReconnectionDelay;\n      }\n    }\n    this._debug(\"next delay\", delay);\n    return delay;\n  }\n  _wait() {\n    return new Promise((resolve) => {\n      setTimeout(resolve, this._getNextDelay());\n    });\n  }\n  _getNextProtocols(protocolsProvider) {\n    if (!protocolsProvider)\n      return Promise.resolve(null);\n    if (typeof protocolsProvider === \"string\" || Array.isArray(protocolsProvider)) {\n      return Promise.resolve(protocolsProvider);\n    }\n    if (typeof protocolsProvider === \"function\") {\n      const protocols = protocolsProvider();\n      if (!protocols)\n        return Promise.resolve(null);\n      if (typeof protocols === \"string\" || Array.isArray(protocols)) {\n        return Promise.resolve(protocols);\n      }\n      if (protocols.then) {\n        return protocols;\n      }\n    }\n    throw Error(\"Invalid protocols\");\n  }\n  _getNextUrl(urlProvider) {\n    if (typeof urlProvider === \"string\") {\n      return Promise.resolve(urlProvider);\n    }\n    if (typeof urlProvider === \"function\") {\n      const url = urlProvider();\n      if (typeof url === \"string\") {\n        return Promise.resolve(url);\n      }\n      if (url.then) {\n        return url;\n      }\n    }\n    throw Error(\"Invalid URL\");\n  }\n  _connect() {\n    if (this._connectLock || !this._shouldReconnect) {\n      return;\n    }\n    this._connectLock = true;\n    const {\n      maxRetries = DEFAULT.maxRetries,\n      connectionTimeout = DEFAULT.connectionTimeout\n    } = this._options;\n    if (this._retryCount >= maxRetries) {\n      this._debug(\"max retries reached\", this._retryCount, \">=\", maxRetries);\n      return;\n    }\n    this._retryCount++;\n    this._debug(\"connect\", this._retryCount);\n    this._removeListeners();\n    this._wait().then(\n      () => Promise.all([\n        this._getNextUrl(this._url),\n        this._getNextProtocols(this._protocols || null)\n      ])\n    ).then(([url, protocols]) => {\n      if (this._closeCalled) {\n        this._connectLock = false;\n        return;\n      }\n      if (!this._options.WebSocket && typeof WebSocket === \"undefined\" && !didWarnAboutMissingWebSocket) {\n        console.error(`\\u203C\\uFE0F No WebSocket implementation available. You should define options.WebSocket. \n\nFor example, if you're using node.js, run \\`npm install ws\\`, and then in your code:\n\nimport PartySocket from 'partysocket';\nimport WS from 'ws';\n\nconst partysocket = new PartySocket({\n  host: \"127.0.0.1:1999\",\n  room: \"test-room\",\n  WebSocket: WS\n});\n\n`);\n        didWarnAboutMissingWebSocket = true;\n      }\n      const WS = this._options.WebSocket || WebSocket;\n      this._debug(\"connect\", { url, protocols });\n      this._ws = protocols ? new WS(url, protocols) : new WS(url);\n      this._ws.binaryType = this._binaryType;\n      this._connectLock = false;\n      this._addListeners();\n      this._connectTimeout = setTimeout(\n        () => this._handleTimeout(),\n        connectionTimeout\n      );\n    }).catch((err) => {\n      this._connectLock = false;\n      this._handleError(new Events.ErrorEvent(Error(err.message), this));\n    });\n  }\n  _handleTimeout() {\n    this._debug(\"timeout event\");\n    this._handleError(new Events.ErrorEvent(Error(\"TIMEOUT\"), this));\n  }\n  _disconnect(code = 1e3, reason) {\n    this._clearTimeouts();\n    if (!this._ws) {\n      return;\n    }\n    this._removeListeners();\n    try {\n      this._ws.close(code, reason);\n      this._handleClose(new Events.CloseEvent(code, reason, this));\n    } catch (error) {\n    }\n  }\n  _acceptOpen() {\n    this._debug(\"accept open\");\n    this._retryCount = 0;\n  }\n  _handleOpen = (event) => {\n    this._debug(\"open event\");\n    const { minUptime = DEFAULT.minUptime } = this._options;\n    clearTimeout(this._connectTimeout);\n    this._uptimeTimeout = setTimeout(() => this._acceptOpen(), minUptime);\n    assert(this._ws, \"WebSocket is not defined\");\n    this._ws.binaryType = this._binaryType;\n    this._messageQueue.forEach((message) => this._ws?.send(message));\n    this._messageQueue = [];\n    if (this.onopen) {\n      this.onopen(event);\n    }\n    this.dispatchEvent(cloneEvent(event));\n  };\n  _handleMessage = (event) => {\n    this._debug(\"message event\");\n    if (this.onmessage) {\n      this.onmessage(event);\n    }\n    this.dispatchEvent(cloneEvent(event));\n  };\n  _handleError = (event) => {\n    this._debug(\"error event\", event.message);\n    this._disconnect(\n      void 0,\n      event.message === \"TIMEOUT\" ? \"timeout\" : void 0\n    );\n    if (this.onerror) {\n      this.onerror(event);\n    }\n    this._debug(\"exec error listeners\");\n    this.dispatchEvent(cloneEvent(event));\n    this._connect();\n  };\n  _handleClose = (event) => {\n    this._debug(\"close event\");\n    this._clearTimeouts();\n    if (this._shouldReconnect) {\n      this._connect();\n    }\n    if (this.onclose) {\n      this.onclose(event);\n    }\n    this.dispatchEvent(cloneEvent(event));\n  };\n  _removeListeners() {\n    if (!this._ws) {\n      return;\n    }\n    this._debug(\"removeListeners\");\n    this._ws.removeEventListener(\"open\", this._handleOpen);\n    this._ws.removeEventListener(\"close\", this._handleClose);\n    this._ws.removeEventListener(\"message\", this._handleMessage);\n    this._ws.removeEventListener(\"error\", this._handleError);\n  }\n  _addListeners() {\n    if (!this._ws) {\n      return;\n    }\n    this._debug(\"addListeners\");\n    this._ws.addEventListener(\"open\", this._handleOpen);\n    this._ws.addEventListener(\"close\", this._handleClose);\n    this._ws.addEventListener(\"message\", this._handleMessage);\n    this._ws.addEventListener(\"error\", this._handleError);\n  }\n  _clearTimeouts() {\n    clearTimeout(this._connectTimeout);\n    clearTimeout(this._uptimeTimeout);\n  }\n};\n\n// src/index.ts\nvar valueIsNotNil = (keyValuePair) => keyValuePair[1] !== null && keyValuePair[1] !== void 0;\nfunction generateUUID() {\n  if (typeof crypto !== \"undefined\" && crypto.randomUUID) {\n    return crypto.randomUUID();\n  }\n  let d = (/* @__PURE__ */ new Date()).getTime();\n  let d2 = typeof performance !== \"undefined\" && performance.now && performance.now() * 1e3 || 0;\n  return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function(c) {\n    let r = Math.random() * 16;\n    if (d > 0) {\n      r = (d + r) % 16 | 0;\n      d = Math.floor(d / 16);\n    } else {\n      r = (d2 + r) % 16 | 0;\n      d2 = Math.floor(d2 / 16);\n    }\n    return (c === \"x\" ? r : r & 3 | 8).toString(16);\n  });\n}\nfunction getPartyInfo(partySocketOptions, defaultProtocol, defaultParams = {}) {\n  const {\n    host: rawHost,\n    path: rawPath,\n    protocol: rawProtocol,\n    room,\n    party,\n    query\n  } = partySocketOptions;\n  let host = rawHost.replace(/^(http|https|ws|wss):\\/\\//, \"\");\n  if (host.endsWith(\"/\")) {\n    host = host.slice(0, -1);\n  }\n  if (rawPath && rawPath.startsWith(\"/\")) {\n    throw new Error(\"path must not start with a slash\");\n  }\n  const name = party ?? \"main\";\n  const path = rawPath ? `/${rawPath}` : \"\";\n  const protocol = rawProtocol || (host.startsWith(\"localhost:\") || host.startsWith(\"127.0.0.1:\") || host.startsWith(\"192.168.\") || host.startsWith(\"10.\") || host.startsWith(\"172.\") && host.split(\".\")[1] >= \"16\" && host.split(\".\")[1] <= \"31\" || host.startsWith(\"[::ffff:7f00:1]:\") ? (\n    // http / ws\n    defaultProtocol\n  ) : (\n    // https / wss\n    defaultProtocol + \"s\"\n  ));\n  const baseUrl = `${protocol}://${host}/${party ? `parties/${party}` : \"party\"}/${room}${path}`;\n  const makeUrl = (query2 = {}) => `${baseUrl}?${new URLSearchParams([\n    ...Object.entries(defaultParams),\n    ...Object.entries(query2).filter(valueIsNotNil)\n  ])}`;\n  const urlProvider = typeof query === \"function\" ? async () => makeUrl(await query()) : makeUrl(query);\n  return {\n    host,\n    path,\n    room,\n    name,\n    protocol,\n    partyUrl: baseUrl,\n    urlProvider\n  };\n}\nvar PartySocket = class extends ReconnectingWebSocket {\n  constructor(partySocketOptions) {\n    const wsOptions = getWSOptions(partySocketOptions);\n    super(wsOptions.urlProvider, wsOptions.protocols, wsOptions.socketOptions);\n    this.partySocketOptions = partySocketOptions;\n    this.setWSProperties(wsOptions);\n  }\n  _pk;\n  _pkurl;\n  name;\n  room;\n  host;\n  path;\n  updateProperties(partySocketOptions) {\n    const wsOptions = getWSOptions({\n      ...this.partySocketOptions,\n      ...partySocketOptions,\n      host: partySocketOptions.host ?? this.host,\n      room: partySocketOptions.room ?? this.room,\n      path: partySocketOptions.path ?? this.path\n    });\n    this._url = wsOptions.urlProvider;\n    this._protocols = wsOptions.protocols;\n    this._options = wsOptions.socketOptions;\n    this.setWSProperties(wsOptions);\n  }\n  setWSProperties(wsOptions) {\n    const { _pk, _pkurl, name, room, host, path } = wsOptions;\n    this._pk = _pk;\n    this._pkurl = _pkurl;\n    this.name = name;\n    this.room = room;\n    this.host = host;\n    this.path = path;\n  }\n  reconnect(code, reason) {\n    if (!this.room || !this.host) {\n      throw new Error(\n        \"The room and host must be set before connecting, use `updateProperties` method to set them or pass them to the constructor.\"\n      );\n    }\n    super.reconnect(code, reason);\n  }\n  get id() {\n    return this._pk;\n  }\n  /**\n   * Exposes the static PartyKit room URL without applying query parameters.\n   * To access the currently connected WebSocket url, use PartySocket#url.\n   */\n  get roomUrl() {\n    return this._pkurl;\n  }\n  // a `fetch` method that uses (almost) the same options as `PartySocket`\n  static async fetch(options, init) {\n    const party = getPartyInfo(options, \"http\");\n    const url = typeof party.urlProvider === \"string\" ? party.urlProvider : await party.urlProvider();\n    const doFetch = options.fetch ?? fetch;\n    return doFetch(url, init);\n  }\n};\nfunction getWSOptions(partySocketOptions) {\n  const {\n    id,\n    host: _host,\n    path: _path,\n    party: _party,\n    room: _room,\n    protocol: _protocol,\n    query: _query,\n    protocols,\n    ...socketOptions\n  } = partySocketOptions;\n  const _pk = id || generateUUID();\n  const party = getPartyInfo(partySocketOptions, \"ws\", { _pk });\n  return {\n    _pk,\n    _pkurl: party.partyUrl,\n    name: party.name,\n    room: party.room,\n    host: party.host,\n    path: party.path,\n    protocols,\n    socketOptions,\n    urlProvider: party.urlProvider\n  };\n}\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  WebSocket\n});\n/*!\n * Reconnecting WebSocket\n * by Pedro Ladaria <pedro.ladaria@gmail.com>\n * https://github.com/pladaria/reconnecting-websocket\n * License MIT\n */\n", "export class DoubleIndexedKV<K, V> {\n  keyToValue = new Map<K, V>();\n  valueToKey = new Map<V, K>();\n\n  set(key: K, value: V) {\n    this.keyToValue.set(key, value);\n    this.valueToKey.set(value, key);\n  }\n\n  getByKey(key: K): V | undefined {\n    return this.keyToValue.get(key);\n  }\n\n  getByValue(value: V): K | undefined {\n    return this.valueToKey.get(value);\n  }\n\n  clear() {\n    this.keyToValue.clear();\n    this.valueToKey.clear();\n  }\n}\n", "import { DoubleIndexedKV } from './double-indexed-kv';\n\nexport class Registry<T> {\n  private kv = new DoubleIndexedKV<string, T>();\n\n  constructor(private readonly generateIdentifier: (v: T) => string) {}\n\n  register(value: T, identifier?: string): void {\n    if (this.kv.getByValue(value)) {\n      return;\n    }\n\n    if (!identifier) {\n      identifier = this.generateIdentifier(value);\n    }\n\n    this.kv.set(identifier, value);\n  }\n\n  clear(): void {\n    this.kv.clear();\n  }\n\n  getIdentifier(value: T) {\n    return this.kv.getByValue(value);\n  }\n\n  getValue(identifier: string) {\n    return this.kv.getByKey(identifier);\n  }\n}\n", "import { Registry } from './registry';\nimport { Class } from './types';\n\nexport interface RegisterOptions {\n  identifier?: string;\n  allowProps?: string[];\n}\n\nexport class ClassRegistry extends Registry<Class> {\n  constructor() {\n    super(c => c.name);\n  }\n\n  private classToAllowedProps = new Map<Class, string[]>();\n\n  register(value: Class, options?: string | RegisterOptions): void {\n    if (typeof options === 'object') {\n      if (options.allowProps) {\n        this.classToAllowedProps.set(value, options.allowProps);\n      }\n\n      super.register(value, options.identifier);\n    } else {\n      super.register(value, options);\n    }\n  }\n\n  getAllowedProps(value: Class): string[] | undefined {\n    return this.classToAllowedProps.get(value);\n  }\n}\n", "function valuesOfObj<T>(record: Record<string, T>): T[] {\n  if ('values' in Object) {\n    // eslint-disable-next-line es5/no-es6-methods\n    return Object.values(record);\n  }\n\n  const values: T[] = [];\n\n  // eslint-disable-next-line no-restricted-syntax\n  for (const key in record) {\n    if (record.hasOwnProperty(key)) {\n      values.push(record[key]);\n    }\n  }\n\n  return values;\n}\n\nexport function find<T>(\n  record: Record<string, T>,\n  predicate: (v: T) => boolean\n): T | undefined {\n  const values = valuesOfObj(record);\n  if ('find' in values) {\n    // eslint-disable-next-line es5/no-es6-methods\n    return values.find(predicate);\n  }\n\n  const valuesNotNever = values as T[];\n\n  for (let i = 0; i < valuesNotNever.length; i++) {\n    const value = valuesNotNever[i];\n    if (predicate(value)) {\n      return value;\n    }\n  }\n\n  return undefined;\n}\n\nexport function forEach<T>(\n  record: Record<string, T>,\n  run: (v: T, key: string) => void\n) {\n  Object.entries(record).forEach(([key, value]) => run(value, key));\n}\n\nexport function includes<T>(arr: T[], value: T) {\n  return arr.indexOf(value) !== -1;\n}\n\nexport function findArr<T>(\n  record: T[],\n  predicate: (v: T) => boolean\n): T | undefined {\n  for (let i = 0; i < record.length; i++) {\n    const value = record[i];\n    if (predicate(value)) {\n      return value;\n    }\n  }\n\n  return undefined;\n}\n", "import { JSONValue } from './types';\nimport { find } from './util';\n\nexport interface CustomTransfomer<I, O extends JSONValue> {\n  name: string;\n  isApplicable: (v: any) => v is I;\n  serialize: (v: I) => O;\n  deserialize: (v: O) => I;\n}\n\nexport class CustomTransformerRegistry {\n  private transfomers: Record<string, CustomTransfomer<any, any>> = {};\n\n  register<I, O extends JSONValue>(transformer: CustomTransfomer<I, O>) {\n    this.transfomers[transformer.name] = transformer;\n  }\n\n  findApplicable<T>(v: T) {\n    return find(this.transfomers, transformer =>\n      transformer.isApplicable(v)\n    ) as CustomTransfomer<T, JSONValue> | undefined;\n  }\n\n  findByName(name: string) {\n    return this.transfomers[name];\n  }\n}\n", "const getType = (payload: any): string =>\n  Object.prototype.toString.call(payload).slice(8, -1);\n\nexport const isUndefined = (payload: any): payload is undefined =>\n  typeof payload === 'undefined';\n\nexport const isNull = (payload: any): payload is null => payload === null;\n\nexport const isPlainObject = (\n  payload: any\n): payload is { [key: string]: any } => {\n  if (typeof payload !== 'object' || payload === null) return false;\n  if (payload === Object.prototype) return false;\n  if (Object.getPrototypeOf(payload) === null) return true;\n\n  return Object.getPrototypeOf(payload) === Object.prototype;\n};\n\nexport const isEmptyObject = (payload: any): payload is {} =>\n  isPlainObject(payload) && Object.keys(payload).length === 0;\n\nexport const isArray = (payload: any): payload is any[] =>\n  Array.isArray(payload);\n\nexport const isString = (payload: any): payload is string =>\n  typeof payload === 'string';\n\nexport const isNumber = (payload: any): payload is number =>\n  typeof payload === 'number' && !isNaN(payload);\n\nexport const isBoolean = (payload: any): payload is boolean =>\n  typeof payload === 'boolean';\n\nexport const isRegExp = (payload: any): payload is RegExp =>\n  payload instanceof RegExp;\n\nexport const isMap = (payload: any): payload is Map<any, any> =>\n  payload instanceof Map;\n\nexport const isSet = (payload: any): payload is Set<any> =>\n  payload instanceof Set;\n\nexport const isSymbol = (payload: any): payload is symbol =>\n  getType(payload) === 'Symbol';\n\nexport const isDate = (payload: any): payload is Date =>\n  payload instanceof Date && !isNaN(payload.valueOf());\n\nexport const isError = (payload: any): payload is Error =>\n  payload instanceof Error;\n\nexport const isNaNValue = (payload: any): payload is typeof NaN =>\n  typeof payload === 'number' && isNaN(payload);\n\nexport const isPrimitive = (\n  payload: any\n): payload is boolean | null | undefined | number | string | symbol =>\n  isBoolean(payload) ||\n  isNull(payload) ||\n  isUndefined(payload) ||\n  isNumber(payload) ||\n  isString(payload) ||\n  isSymbol(payload);\n\nexport const isBigint = (payload: any): payload is bigint =>\n  typeof payload === 'bigint';\n\nexport const isInfinite = (payload: any): payload is number =>\n  payload === Infinity || payload === -Infinity;\n\nexport type TypedArrayConstructor =\n  | Int8ArrayConstructor\n  | Uint8ArrayConstructor\n  | Uint8ClampedArrayConstructor\n  | Int16ArrayConstructor\n  | Uint16ArrayConstructor\n  | Int32ArrayConstructor\n  | Uint32ArrayConstructor\n  | Float32ArrayConstructor\n  | Float64ArrayConstructor;\n\nexport type TypedArray = InstanceType<TypedArrayConstructor>;\n\nexport const isTypedArray = (payload: any): payload is TypedArray =>\n  ArrayBuffer.isView(payload) && !(payload instanceof DataView);\n\nexport const isURL = (payload: any): payload is URL => payload instanceof URL;\n", "export type StringifiedPath = string;\ntype Path = string[];\n\nexport const escapeKey = (key: string) => key.replace(/\\./g, '\\\\.');\n\nexport const stringifyPath = (path: Path): StringifiedPath =>\n  path\n    .map(String)\n    .map(escapeKey)\n    .join('.');\n\nexport const parsePath = (string: StringifiedPath) => {\n  const result: string[] = [];\n\n  let segment = '';\n  for (let i = 0; i < string.length; i++) {\n    let char = string.charAt(i);\n\n    const isEscapedDot = char === '\\\\' && string.charAt(i + 1) === '.';\n    if (isEscapedDot) {\n      segment += '.';\n      i++;\n      continue;\n    }\n\n    const isEndOfSegment = char === '.';\n    if (isEndOfSegment) {\n      result.push(segment);\n      segment = '';\n      continue;\n    }\n\n    segment += char;\n  }\n\n  const lastSegment = segment;\n  result.push(lastSegment);\n\n  return result;\n};\n", "import {\n  isBigint,\n  isDate,\n  isInfinite,\n  isMap,\n  isNaNValue,\n  isRegExp,\n  isSet,\n  isUndefined,\n  isSymbol,\n  isArray,\n  isError,\n  isTypedArray,\n  TypedArrayConstructor,\n  isURL,\n} from './is';\nimport { findArr } from './util';\nimport SuperJSON from '.';\n\nexport type PrimitiveTypeAnnotation = 'number' | 'undefined' | 'bigint';\n\ntype LeafTypeAnnotation =\n  | PrimitiveTypeAnnotation\n  | 'regexp'\n  | 'Date'\n  | 'Error'\n  | 'URL';\n\ntype TypedArrayAnnotation = ['typed-array', string];\ntype ClassTypeAnnotation = ['class', string];\ntype SymbolTypeAnnotation = ['symbol', string];\ntype CustomTypeAnnotation = ['custom', string];\n\ntype SimpleTypeAnnotation = LeafTypeAnnotation | 'map' | 'set';\n\ntype CompositeTypeAnnotation =\n  | TypedArrayAnnotation\n  | ClassTypeAnnotation\n  | SymbolTypeAnnotation\n  | CustomTypeAnnotation;\n\nexport type TypeAnnotation = SimpleTypeAnnotation | CompositeTypeAnnotation;\n\nfunction simpleTransformation<I, O, A extends SimpleTypeAnnotation>(\n  isApplicable: (v: any, superJson: SuperJSON) => v is I,\n  annotation: A,\n  transform: (v: I, superJson: SuperJSON) => O,\n  untransform: (v: O, superJson: SuperJSON) => I\n) {\n  return {\n    isApplicable,\n    annotation,\n    transform,\n    untransform,\n  };\n}\n\nconst simpleRules = [\n  simpleTransformation(\n    isUndefined,\n    'undefined',\n    () => null,\n    () => undefined\n  ),\n  simpleTransformation(\n    isBigint,\n    'bigint',\n    v => v.toString(),\n    v => {\n      if (typeof BigInt !== 'undefined') {\n        return BigInt(v);\n      }\n\n      console.error('Please add a BigInt polyfill.');\n\n      return v as any;\n    }\n  ),\n  simpleTransformation(\n    isDate,\n    'Date',\n    v => v.toISOString(),\n    v => new Date(v)\n  ),\n\n  simpleTransformation(\n    isError,\n    'Error',\n    (v, superJson) => {\n      const baseError: any = {\n        name: v.name,\n        message: v.message,\n      };\n\n      superJson.allowedErrorProps.forEach(prop => {\n        baseError[prop] = (v as any)[prop];\n      });\n\n      return baseError;\n    },\n    (v, superJson) => {\n      const e = new Error(v.message);\n      e.name = v.name;\n      e.stack = v.stack;\n\n      superJson.allowedErrorProps.forEach(prop => {\n        (e as any)[prop] = v[prop];\n      });\n\n      return e;\n    }\n  ),\n\n  simpleTransformation(\n    isRegExp,\n    'regexp',\n    v => '' + v,\n    regex => {\n      const body = regex.slice(1, regex.lastIndexOf('/'));\n      const flags = regex.slice(regex.lastIndexOf('/') + 1);\n      return new RegExp(body, flags);\n    }\n  ),\n\n  simpleTransformation(\n    isSet,\n    'set',\n    // (sets only exist in es6+)\n    // eslint-disable-next-line es5/no-es6-methods\n    v => [...v.values()],\n    v => new Set(v)\n  ),\n  simpleTransformation(\n    isMap,\n    'map',\n    v => [...v.entries()],\n    v => new Map(v)\n  ),\n\n  simpleTransformation<number, 'NaN' | 'Infinity' | '-Infinity', 'number'>(\n    (v): v is number => isNaNValue(v) || isInfinite(v),\n    'number',\n    v => {\n      if (isNaNValue(v)) {\n        return 'NaN';\n      }\n\n      if (v > 0) {\n        return 'Infinity';\n      } else {\n        return '-Infinity';\n      }\n    },\n    Number\n  ),\n\n  simpleTransformation<number, '-0', 'number'>(\n    (v): v is number => v === 0 && 1 / v === -Infinity,\n    'number',\n    () => {\n      return '-0';\n    },\n    Number\n  ),\n\n  simpleTransformation(\n    isURL,\n    'URL',\n    v => v.toString(),\n    v => new URL(v)\n  ),\n];\n\nfunction compositeTransformation<I, O, A extends CompositeTypeAnnotation>(\n  isApplicable: (v: any, superJson: SuperJSON) => v is I,\n  annotation: (v: I, superJson: SuperJSON) => A,\n  transform: (v: I, superJson: SuperJSON) => O,\n  untransform: (v: O, a: A, superJson: SuperJSON) => I\n) {\n  return {\n    isApplicable,\n    annotation,\n    transform,\n    untransform,\n  };\n}\n\nconst symbolRule = compositeTransformation(\n  (s, superJson): s is Symbol => {\n    if (isSymbol(s)) {\n      const isRegistered = !!superJson.symbolRegistry.getIdentifier(s);\n      return isRegistered;\n    }\n    return false;\n  },\n  (s, superJson) => {\n    const identifier = superJson.symbolRegistry.getIdentifier(s);\n    return ['symbol', identifier!];\n  },\n  v => v.description,\n  (_, a, superJson) => {\n    const value = superJson.symbolRegistry.getValue(a[1]);\n    if (!value) {\n      throw new Error('Trying to deserialize unknown symbol');\n    }\n    return value;\n  }\n);\n\nconst constructorToName = [\n  Int8Array,\n  Uint8Array,\n  Int16Array,\n  Uint16Array,\n  Int32Array,\n  Uint32Array,\n  Float32Array,\n  Float64Array,\n  Uint8ClampedArray,\n].reduce<Record<string, TypedArrayConstructor>>((obj, ctor) => {\n  obj[ctor.name] = ctor;\n  return obj;\n}, {});\n\nconst typedArrayRule = compositeTransformation(\n  isTypedArray,\n  v => ['typed-array', v.constructor.name],\n  v => [...v],\n  (v, a) => {\n    const ctor = constructorToName[a[1]];\n\n    if (!ctor) {\n      throw new Error('Trying to deserialize unknown typed array');\n    }\n\n    return new ctor(v);\n  }\n);\n\nexport function isInstanceOfRegisteredClass(\n  potentialClass: any,\n  superJson: SuperJSON\n): potentialClass is any {\n  if (potentialClass?.constructor) {\n    const isRegistered = !!superJson.classRegistry.getIdentifier(\n      potentialClass.constructor\n    );\n    return isRegistered;\n  }\n  return false;\n}\n\nconst classRule = compositeTransformation(\n  isInstanceOfRegisteredClass,\n  (clazz, superJson) => {\n    const identifier = superJson.classRegistry.getIdentifier(clazz.constructor);\n    return ['class', identifier!];\n  },\n  (clazz, superJson) => {\n    const allowedProps = superJson.classRegistry.getAllowedProps(\n      clazz.constructor\n    );\n    if (!allowedProps) {\n      return { ...clazz };\n    }\n\n    const result: any = {};\n    allowedProps.forEach(prop => {\n      result[prop] = clazz[prop];\n    });\n    return result;\n  },\n  (v, a, superJson) => {\n    const clazz = superJson.classRegistry.getValue(a[1]);\n\n    if (!clazz) {\n      throw new Error(\n        'Trying to deserialize unknown class - check https://github.com/blitz-js/superjson/issues/116#issuecomment-773996564'\n      );\n    }\n\n    return Object.assign(Object.create(clazz.prototype), v);\n  }\n);\n\nconst customRule = compositeTransformation(\n  (value, superJson): value is any => {\n    return !!superJson.customTransformerRegistry.findApplicable(value);\n  },\n  (value, superJson) => {\n    const transformer = superJson.customTransformerRegistry.findApplicable(\n      value\n    )!;\n    return ['custom', transformer.name];\n  },\n  (value, superJson) => {\n    const transformer = superJson.customTransformerRegistry.findApplicable(\n      value\n    )!;\n    return transformer.serialize(value);\n  },\n  (v, a, superJson) => {\n    const transformer = superJson.customTransformerRegistry.findByName(a[1]);\n    if (!transformer) {\n      throw new Error('Trying to deserialize unknown custom value');\n    }\n    return transformer.deserialize(v);\n  }\n);\n\nconst compositeRules = [classRule, symbolRule, customRule, typedArrayRule];\n\nexport const transformValue = (\n  value: any,\n  superJson: SuperJSON\n): { value: any; type: TypeAnnotation } | undefined => {\n  const applicableCompositeRule = findArr(compositeRules, rule =>\n    rule.isApplicable(value, superJson)\n  );\n  if (applicableCompositeRule) {\n    return {\n      value: applicableCompositeRule.transform(value as never, superJson),\n      type: applicableCompositeRule.annotation(value, superJson),\n    };\n  }\n\n  const applicableSimpleRule = findArr(simpleRules, rule =>\n    rule.isApplicable(value, superJson)\n  );\n\n  if (applicableSimpleRule) {\n    return {\n      value: applicableSimpleRule.transform(value as never, superJson),\n      type: applicableSimpleRule.annotation,\n    };\n  }\n\n  return undefined;\n};\n\nconst simpleRulesByAnnotation: Record<string, typeof simpleRules[0]> = {};\nsimpleRules.forEach(rule => {\n  simpleRulesByAnnotation[rule.annotation] = rule;\n});\n\nexport const untransformValue = (\n  json: any,\n  type: TypeAnnotation,\n  superJson: SuperJSON\n) => {\n  if (isArray(type)) {\n    switch (type[0]) {\n      case 'symbol':\n        return symbolRule.untransform(json, type, superJson);\n      case 'class':\n        return classRule.untransform(json, type, superJson);\n      case 'custom':\n        return customRule.untransform(json, type, superJson);\n      case 'typed-array':\n        return typedArrayRule.untransform(json, type, superJson);\n      default:\n        throw new Error('Unknown transformation: ' + type);\n    }\n  } else {\n    const transformation = simpleRulesByAnnotation[type];\n    if (!transformation) {\n      throw new Error('Unknown transformation: ' + type);\n    }\n\n    return transformation.untransform(json as never, superJson);\n  }\n};\n", "import { isMap, isArray, isPlainObject, isSet } from './is';\nimport { includes } from './util';\n\nconst getNthKey = (value: Map<any, any> | Set<any>, n: number): any => {\n  const keys = value.keys();\n  while (n > 0) {\n    keys.next();\n    n--;\n  }\n\n  return keys.next().value;\n};\n\nfunction validatePath(path: (string | number)[]) {\n  if (includes(path, '__proto__')) {\n    throw new Error('__proto__ is not allowed as a property');\n  }\n  if (includes(path, 'prototype')) {\n    throw new Error('prototype is not allowed as a property');\n  }\n  if (includes(path, 'constructor')) {\n    throw new Error('constructor is not allowed as a property');\n  }\n}\n\nexport const getDeep = (object: object, path: (string | number)[]): object => {\n  validatePath(path);\n\n  for (let i = 0; i < path.length; i++) {\n    const key = path[i];\n    if (isSet(object)) {\n      object = getNthKey(object, +key);\n    } else if (isMap(object)) {\n      const row = +key;\n      const type = +path[++i] === 0 ? 'key' : 'value';\n\n      const keyOfRow = getNthKey(object, row);\n      switch (type) {\n        case 'key':\n          object = keyOfRow;\n          break;\n        case 'value':\n          object = object.get(keyOfRow);\n          break;\n      }\n    } else {\n      object = (object as any)[key];\n    }\n  }\n\n  return object;\n};\n\nexport const setDeep = (\n  object: any,\n  path: (string | number)[],\n  mapper: (v: any) => any\n): any => {\n  validatePath(path);\n\n  if (path.length === 0) {\n    return mapper(object);\n  }\n\n  let parent = object;\n\n  for (let i = 0; i < path.length - 1; i++) {\n    const key = path[i];\n\n    if (isArray(parent)) {\n      const index = +key;\n      parent = parent[index];\n    } else if (isPlainObject(parent)) {\n      parent = parent[key];\n    } else if (isSet(parent)) {\n      const row = +key;\n      parent = getNthKey(parent, row);\n    } else if (isMap(parent)) {\n      const isEnd = i === path.length - 2;\n      if (isEnd) {\n        break;\n      }\n\n      const row = +key;\n      const type = +path[++i] === 0 ? 'key' : 'value';\n\n      const keyOfRow = getNthKey(parent, row);\n      switch (type) {\n        case 'key':\n          parent = keyOfRow;\n          break;\n        case 'value':\n          parent = parent.get(keyOfRow);\n          break;\n      }\n    }\n  }\n\n  const lastKey = path[path.length - 1];\n\n  if (isArray(parent)) {\n    parent[+lastKey] = mapper(parent[+lastKey]);\n  } else if (isPlainObject(parent)) {\n    parent[lastKey] = mapper(parent[lastKey]);\n  }\n\n  if (isSet(parent)) {\n    const oldValue = getNthKey(parent, +lastKey);\n    const newValue = mapper(oldValue);\n    if (oldValue !== newValue) {\n      parent.delete(oldValue);\n      parent.add(newValue);\n    }\n  }\n\n  if (isMap(parent)) {\n    const row = +path[path.length - 2];\n    const keyToRow = getNthKey(parent, row);\n\n    const type = +lastKey === 0 ? 'key' : 'value';\n    switch (type) {\n      case 'key': {\n        const newKey = mapper(keyToRow);\n        parent.set(newKey, parent.get(keyToRow));\n\n        if (newKey !== keyToRow) {\n          parent.delete(keyToRow);\n        }\n        break;\n      }\n\n      case 'value': {\n        parent.set(keyToRow, mapper(parent.get(keyToRow)));\n        break;\n      }\n    }\n  }\n\n  return object;\n};\n", "import {\n  isArray,\n  isEmptyObject,\n  isMap,\n  isPlainObject,\n  isPrimitive,\n  isSet,\n} from './is';\nimport { escapeKey, stringifyPath } from './pathstringifier';\nimport {\n  isInstanceOfRegisteredClass,\n  transformValue,\n  TypeAnnotation,\n  untransformValue,\n} from './transformer';\nimport { includes, forEach } from './util';\nimport { parsePath } from './pathstringifier';\nimport { getDeep, setDeep } from './accessDeep';\nimport SuperJSON from '.';\n\ntype Tree<T> = InnerNode<T> | Leaf<T>;\ntype Leaf<T> = [T];\ntype InnerNode<T> = [T, Record<string, Tree<T>>];\n\nexport type MinimisedTree<T> = Tree<T> | Record<string, Tree<T>> | undefined;\n\nfunction traverse<T>(\n  tree: MinimisedTree<T>,\n  walker: (v: T, path: string[]) => void,\n  origin: string[] = []\n): void {\n  if (!tree) {\n    return;\n  }\n\n  if (!isArray(tree)) {\n    forEach(tree, (subtree, key) =>\n      traverse(subtree, walker, [...origin, ...parsePath(key)])\n    );\n    return;\n  }\n\n  const [nodeValue, children] = tree;\n  if (children) {\n    forEach(children, (child, key) => {\n      traverse(child, walker, [...origin, ...parsePath(key)]);\n    });\n  }\n\n  walker(nodeValue, origin);\n}\n\nexport function applyValueAnnotations(\n  plain: any,\n  annotations: MinimisedTree<TypeAnnotation>,\n  superJson: SuperJSON\n) {\n  traverse(annotations, (type, path) => {\n    plain = setDeep(plain, path, v => untransformValue(v, type, superJson));\n  });\n\n  return plain;\n}\n\nexport function applyReferentialEqualityAnnotations(\n  plain: any,\n  annotations: ReferentialEqualityAnnotations\n) {\n  function apply(identicalPaths: string[], path: string) {\n    const object = getDeep(plain, parsePath(path));\n\n    identicalPaths.map(parsePath).forEach(identicalObjectPath => {\n      plain = setDeep(plain, identicalObjectPath, () => object);\n    });\n  }\n\n  if (isArray(annotations)) {\n    const [root, other] = annotations;\n    root.forEach(identicalPath => {\n      plain = setDeep(plain, parsePath(identicalPath), () => plain);\n    });\n\n    if (other) {\n      forEach(other, apply);\n    }\n  } else {\n    forEach(annotations, apply);\n  }\n\n  return plain;\n}\n\nconst isDeep = (object: any, superJson: SuperJSON): boolean =>\n  isPlainObject(object) ||\n  isArray(object) ||\n  isMap(object) ||\n  isSet(object) ||\n  isInstanceOfRegisteredClass(object, superJson);\n\nfunction addIdentity(object: any, path: any[], identities: Map<any, any[][]>) {\n  const existingSet = identities.get(object);\n\n  if (existingSet) {\n    existingSet.push(path);\n  } else {\n    identities.set(object, [path]);\n  }\n}\n\ninterface Result {\n  transformedValue: any;\n  annotations?: MinimisedTree<TypeAnnotation>;\n}\n\nexport type ReferentialEqualityAnnotations =\n  | Record<string, string[]>\n  | [string[]]\n  | [string[], Record<string, string[]>];\n\nexport function generateReferentialEqualityAnnotations(\n  identitites: Map<any, any[][]>,\n  dedupe: boolean\n): ReferentialEqualityAnnotations | undefined {\n  const result: Record<string, string[]> = {};\n  let rootEqualityPaths: string[] | undefined = undefined;\n\n  identitites.forEach(paths => {\n    if (paths.length <= 1) {\n      return;\n    }\n\n    // if we're not deduping, all of these objects continue existing.\n    // putting the shortest path first makes it easier to parse for humans\n    // if we're deduping though, only the first entry will still exist, so we can't do this optimisation.\n    if (!dedupe) {\n      paths = paths\n        .map(path => path.map(String))\n        .sort((a, b) => a.length - b.length);\n    }\n\n    const [representativePath, ...identicalPaths] = paths;\n\n    if (representativePath.length === 0) {\n      rootEqualityPaths = identicalPaths.map(stringifyPath);\n    } else {\n      result[stringifyPath(representativePath)] = identicalPaths.map(\n        stringifyPath\n      );\n    }\n  });\n\n  if (rootEqualityPaths) {\n    if (isEmptyObject(result)) {\n      return [rootEqualityPaths];\n    } else {\n      return [rootEqualityPaths, result];\n    }\n  } else {\n    return isEmptyObject(result) ? undefined : result;\n  }\n}\n\nexport const walker = (\n  object: any,\n  identities: Map<any, any[][]>,\n  superJson: SuperJSON,\n  dedupe: boolean,\n  path: any[] = [],\n  objectsInThisPath: any[] = [],\n  seenObjects = new Map<unknown, Result>()\n): Result => {\n  const primitive = isPrimitive(object);\n\n  if (!primitive) {\n    addIdentity(object, path, identities);\n\n    const seen = seenObjects.get(object);\n    if (seen) {\n      // short-circuit result if we've seen this object before\n      return dedupe\n        ? {\n            transformedValue: null,\n          }\n        : seen;\n    }\n  }\n\n  if (!isDeep(object, superJson)) {\n    const transformed = transformValue(object, superJson);\n\n    const result: Result = transformed\n      ? {\n          transformedValue: transformed.value,\n          annotations: [transformed.type],\n        }\n      : {\n          transformedValue: object,\n        };\n    if (!primitive) {\n      seenObjects.set(object, result);\n    }\n    return result;\n  }\n\n  if (includes(objectsInThisPath, object)) {\n    // prevent circular references\n    return {\n      transformedValue: null,\n    };\n  }\n\n  const transformationResult = transformValue(object, superJson);\n  const transformed = transformationResult?.value ?? object;\n\n  const transformedValue: any = isArray(transformed) ? [] : {};\n  const innerAnnotations: Record<string, Tree<TypeAnnotation>> = {};\n\n  forEach(transformed, (value, index) => {\n    const recursiveResult = walker(\n      value,\n      identities,\n      superJson,\n      dedupe,\n      [...path, index],\n      [...objectsInThisPath, object],\n      seenObjects\n    );\n\n    transformedValue[index] = recursiveResult.transformedValue;\n\n    if (isArray(recursiveResult.annotations)) {\n      innerAnnotations[index] = recursiveResult.annotations;\n    } else if (isPlainObject(recursiveResult.annotations)) {\n      forEach(recursiveResult.annotations, (tree, key) => {\n        innerAnnotations[escapeKey(index) + '.' + key] = tree;\n      });\n    }\n  });\n\n  const result: Result = isEmptyObject(innerAnnotations)\n    ? {\n        transformedValue,\n        annotations: !!transformationResult\n          ? [transformationResult.type]\n          : undefined,\n      }\n    : {\n        transformedValue,\n        annotations: !!transformationResult\n          ? [transformationResult.type, innerAnnotations]\n          : innerAnnotations,\n      };\n  if (!primitive) {\n    seenObjects.set(object, result);\n  }\n\n  return result;\n};\n", "function getType(payload) {\n  return Object.prototype.toString.call(payload).slice(8, -1);\n}\n\nfunction isAnyObject(payload) {\n  return getType(payload) === \"Object\";\n}\n\nfunction isArray(payload) {\n  return getType(payload) === \"Array\";\n}\n\nfunction isBlob(payload) {\n  return getType(payload) === \"Blob\";\n}\n\nfunction isBoolean(payload) {\n  return getType(payload) === \"Boolean\";\n}\n\nfunction isDate(payload) {\n  return getType(payload) === \"Date\" && !isNaN(payload);\n}\n\nfunction isEmptyArray(payload) {\n  return isArray(payload) && payload.length === 0;\n}\n\nfunction isPlainObject(payload) {\n  if (getType(payload) !== \"Object\")\n    return false;\n  const prototype = Object.getPrototypeOf(payload);\n  return !!prototype && prototype.constructor === Object && prototype === Object.prototype;\n}\n\nfunction isEmptyObject(payload) {\n  return isPlainObject(payload) && Object.keys(payload).length === 0;\n}\n\nfunction isEmptyString(payload) {\n  return payload === \"\";\n}\n\nfunction isError(payload) {\n  return getType(payload) === \"Error\" || payload instanceof Error;\n}\n\nfunction isFile(payload) {\n  return getType(payload) === \"File\";\n}\n\nfunction isFullArray(payload) {\n  return isArray(payload) && payload.length > 0;\n}\n\nfunction isFullObject(payload) {\n  return isPlainObject(payload) && Object.keys(payload).length > 0;\n}\n\nfunction isString(payload) {\n  return getType(payload) === \"String\";\n}\n\nfunction isFullString(payload) {\n  return isString(payload) && payload !== \"\";\n}\n\nfunction isFunction(payload) {\n  return typeof payload === \"function\";\n}\n\nfunction isType(payload, type) {\n  if (!(type instanceof Function)) {\n    throw new TypeError(\"Type must be a function\");\n  }\n  if (!Object.prototype.hasOwnProperty.call(type, \"prototype\")) {\n    throw new TypeError(\"Type is not a class\");\n  }\n  const name = type.name;\n  return getType(payload) === name || Boolean(payload && payload.constructor === type);\n}\n\nfunction isInstanceOf(value, classOrClassName) {\n  if (typeof classOrClassName === \"function\") {\n    for (let p = value; p; p = Object.getPrototypeOf(p)) {\n      if (isType(p, classOrClassName)) {\n        return true;\n      }\n    }\n    return false;\n  } else {\n    for (let p = value; p; p = Object.getPrototypeOf(p)) {\n      if (getType(p) === classOrClassName) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n\nfunction isMap(payload) {\n  return getType(payload) === \"Map\";\n}\n\nfunction isNaNValue(payload) {\n  return getType(payload) === \"Number\" && isNaN(payload);\n}\n\nfunction isNumber(payload) {\n  return getType(payload) === \"Number\" && !isNaN(payload);\n}\n\nfunction isNegativeNumber(payload) {\n  return isNumber(payload) && payload < 0;\n}\n\nfunction isNull(payload) {\n  return getType(payload) === \"Null\";\n}\n\nfunction isOneOf(a, b, c, d, e) {\n  return (value) => a(value) || b(value) || !!c && c(value) || !!d && d(value) || !!e && e(value);\n}\n\nfunction isUndefined(payload) {\n  return getType(payload) === \"Undefined\";\n}\n\nconst isNullOrUndefined = isOneOf(isNull, isUndefined);\n\nfunction isObject(payload) {\n  return isPlainObject(payload);\n}\n\nfunction isObjectLike(payload) {\n  return isAnyObject(payload);\n}\n\nfunction isPositiveNumber(payload) {\n  return isNumber(payload) && payload > 0;\n}\n\nfunction isSymbol(payload) {\n  return getType(payload) === \"Symbol\";\n}\n\nfunction isPrimitive(payload) {\n  return isBoolean(payload) || isNull(payload) || isUndefined(payload) || isNumber(payload) || isString(payload) || isSymbol(payload);\n}\n\nfunction isPromise(payload) {\n  return getType(payload) === \"Promise\";\n}\n\nfunction isRegExp(payload) {\n  return getType(payload) === \"RegExp\";\n}\n\nfunction isSet(payload) {\n  return getType(payload) === \"Set\";\n}\n\nfunction isWeakMap(payload) {\n  return getType(payload) === \"WeakMap\";\n}\n\nfunction isWeakSet(payload) {\n  return getType(payload) === \"WeakSet\";\n}\n\nexport { getType, isAnyObject, isArray, isBlob, isBoolean, isDate, isEmptyArray, isEmptyObject, isEmptyString, isError, isFile, isFullArray, isFullObject, isFullString, isFunction, isInstanceOf, isMap, isNaNValue, isNegativeNumber, isNull, isNullOrUndefined, isNumber, isObject, isObjectLike, isOneOf, isPlainObject, isPositiveNumber, isPrimitive, isPromise, isRegExp, isSet, isString, isSymbol, isType, isUndefined, isWeakMap, isWeakSet };\n", "import { isArray, isPlainObject } from 'is-what';\n\nfunction assignProp(carry, key, newVal, originalObject, includeNonenumerable) {\n  const propType = {}.propertyIsEnumerable.call(originalObject, key) ? \"enumerable\" : \"nonenumerable\";\n  if (propType === \"enumerable\")\n    carry[key] = newVal;\n  if (includeNonenumerable && propType === \"nonenumerable\") {\n    Object.defineProperty(carry, key, {\n      value: newVal,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    });\n  }\n}\nfunction copy(target, options = {}) {\n  if (isArray(target)) {\n    return target.map((item) => copy(item, options));\n  }\n  if (!isPlainObject(target)) {\n    return target;\n  }\n  const props = Object.getOwnPropertyNames(target);\n  const symbols = Object.getOwnPropertySymbols(target);\n  return [...props, ...symbols].reduce((carry, key) => {\n    if (isArray(options.props) && !options.props.includes(key)) {\n      return carry;\n    }\n    const val = target[key];\n    const newVal = copy(val, options);\n    assignProp(carry, key, newVal, target, options.nonenumerable);\n    return carry;\n  }, {});\n}\n\nexport { copy };\n", "import { Class, JSONValue, SuperJSONResult, SuperJSONValue } from './types';\nimport { ClassRegistry, RegisterOptions } from './class-registry';\nimport { Registry } from './registry';\nimport {\n  CustomTransfomer,\n  CustomTransformerRegistry,\n} from './custom-transformer-registry';\nimport {\n  applyReferentialEqualityAnnotations,\n  applyValueAnnotations,\n  generateReferentialEqualityAnnotations,\n  walker,\n} from './plainer';\nimport { copy } from 'copy-anything';\n\nexport default class SuperJSON {\n  /**\n   * If true, SuperJSON will make sure only one instance of referentially equal objects are serialized and the rest are replaced with `null`.\n   */\n  private readonly dedupe: boolean;\n\n  /**\n   * @param dedupeReferentialEqualities  If true, SuperJSON will make sure only one instance of referentially equal objects are serialized and the rest are replaced with `null`.\n   */\n  constructor({\n    dedupe = false,\n  }: {\n    dedupe?: boolean;\n  } = {}) {\n    this.dedupe = dedupe;\n  }\n\n  serialize(object: SuperJSONValue): SuperJSONResult {\n    const identities = new Map<any, any[][]>();\n    const output = walker(object, identities, this, this.dedupe);\n    const res: SuperJSONResult = {\n      json: output.transformedValue,\n    };\n\n    if (output.annotations) {\n      res.meta = {\n        ...res.meta,\n        values: output.annotations,\n      };\n    }\n\n    const equalityAnnotations = generateReferentialEqualityAnnotations(\n      identities,\n      this.dedupe\n    );\n    if (equalityAnnotations) {\n      res.meta = {\n        ...res.meta,\n        referentialEqualities: equalityAnnotations,\n      };\n    }\n\n    return res;\n  }\n\n  deserialize<T = unknown>(payload: SuperJSONResult): T {\n    const { json, meta } = payload;\n\n    let result: T = copy(json) as any;\n\n    if (meta?.values) {\n      result = applyValueAnnotations(result, meta.values, this);\n    }\n\n    if (meta?.referentialEqualities) {\n      result = applyReferentialEqualityAnnotations(\n        result,\n        meta.referentialEqualities\n      );\n    }\n\n    return result;\n  }\n\n  stringify(object: SuperJSONValue): string {\n    return JSON.stringify(this.serialize(object));\n  }\n\n  parse<T = unknown>(string: string): T {\n    return this.deserialize(JSON.parse(string));\n  }\n\n  readonly classRegistry = new ClassRegistry();\n  registerClass(v: Class, options?: RegisterOptions | string) {\n    this.classRegistry.register(v, options);\n  }\n\n  readonly symbolRegistry = new Registry<Symbol>(s => s.description ?? '');\n  registerSymbol(v: Symbol, identifier?: string) {\n    this.symbolRegistry.register(v, identifier);\n  }\n\n  readonly customTransformerRegistry = new CustomTransformerRegistry();\n  registerCustom<I, O extends JSONValue>(\n    transformer: Omit<CustomTransfomer<I, O>, 'name'>,\n    name: string\n  ) {\n    this.customTransformerRegistry.register({\n      name,\n      ...transformer,\n    });\n  }\n\n  readonly allowedErrorProps: string[] = [];\n  allowErrorProps(...props: string[]) {\n    this.allowedErrorProps.push(...props);\n  }\n\n  private static defaultInstance = new SuperJSON();\n  static serialize = SuperJSON.defaultInstance.serialize.bind(\n    SuperJSON.defaultInstance\n  );\n  static deserialize = SuperJSON.defaultInstance.deserialize.bind(\n    SuperJSON.defaultInstance\n  );\n  static stringify = SuperJSON.defaultInstance.stringify.bind(\n    SuperJSON.defaultInstance\n  );\n  static parse = SuperJSON.defaultInstance.parse.bind(\n    SuperJSON.defaultInstance\n  );\n  static registerClass = SuperJSON.defaultInstance.registerClass.bind(\n    SuperJSON.defaultInstance\n  );\n  static registerSymbol = SuperJSON.defaultInstance.registerSymbol.bind(\n    SuperJSON.defaultInstance\n  );\n  static registerCustom = SuperJSON.defaultInstance.registerCustom.bind(\n    SuperJSON.defaultInstance\n  );\n  static allowErrorProps = SuperJSON.defaultInstance.allowErrorProps.bind(\n    SuperJSON.defaultInstance\n  );\n}\n\nexport { SuperJSON };\n\nexport const serialize = SuperJSON.serialize;\nexport const deserialize = SuperJSON.deserialize;\n\nexport const stringify = SuperJSON.stringify;\nexport const parse = SuperJSON.parse;\n\nexport const registerClass = SuperJSON.registerClass;\nexport const registerCustom = SuperJSON.registerCustom;\nexport const registerSymbol = SuperJSON.registerSymbol;\nexport const allowErrorProps = SuperJSON.allowErrorProps;\n", "// https://github.com/maxogden/websocket-stream/blob/48dc3ddf943e5ada668c31ccd94e9186f02fafbd/ws-fallback.js\n\nvar ws = null\n\nif (typeof WebSocket !== 'undefined') {\n  ws = WebSocket\n} else if (typeof MozWebSocket !== 'undefined') {\n  ws = MozWebSocket\n} else if (typeof global !== 'undefined') {\n  ws = global.WebSocket || global.MozWebSocket\n} else if (typeof window !== 'undefined') {\n  ws = window.WebSocket || window.MozWebSocket\n} else if (typeof self !== 'undefined') {\n  ws = self.WebSocket || self.MozWebSocket\n}\n\nexport default ws\n", "\"use strict\";\nvar __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n  // If the importer is in node compatibility mode or this is not an ESM\n  // file that has been converted to a CommonJS file using a Babel-\n  // compatible transform (i.e. \"__esModule\" has not been set), then set\n  // \"default\" to the CommonJS \"module.exports\" for node compatibility.\n  isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target,\n  mod\n));\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  createBrowserInspector: () => createBrowserInspector,\n  createBrowserReceiver: () => createBrowserReceiver,\n  createInspector: () => createInspector,\n  createSkyInspector: () => createSkyInspector,\n  createWebSocketInspector: () => createWebSocketInspector,\n  createWebSocketReceiver: () => createWebSocketReceiver\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/browser.ts\nvar import_fast_safe_stringify = __toESM(require(\"fast-safe-stringify\"));\nvar import_xstate = require(\"xstate\");\n\n// src/utils.ts\nfunction toEventObject(event) {\n  if (typeof event === \"string\") {\n    return { type: event };\n  }\n  return event;\n}\nvar isNode = typeof process !== \"undefined\" && typeof process.versions?.node !== \"undefined\" && typeof document === \"undefined\";\n\n// package.json\nvar package_default = {\n  devDependencies: {\n    \"@changesets/changelog-github\": \"^0.5.0\",\n    \"@changesets/cli\": \"^2.27.7\",\n    \"@types/jsdom\": \"^21.1.7\",\n    \"@types/uuid\": \"^9.0.8\",\n    jsdom: \"^23.2.0\",\n    tsup: \"^8.1.0\",\n    typescript: \"^5.5.3\",\n    vitest: \"^1.6.0\",\n    xstate: \"^5.14.0\"\n  },\n  name: \"@statelyai/inspect\",\n  version: \"0.4.0\",\n  description: \"Inspection utilities for state, actors, workflows, and state machines.\",\n  main: \"dist/index.js\",\n  repository: \"https://github.com/statelyai/inspect.git\",\n  author: \"David Khourshid <davidkpiano@gmail.com>\",\n  license: \"MIT\",\n  dependencies: {\n    \"fast-safe-stringify\": \"^2.1.1\",\n    \"isomorphic-ws\": \"^5.0.0\",\n    partysocket: \"^0.0.25\",\n    \"safe-stable-stringify\": \"^2.4.3\",\n    superjson: \"^1.13.3\",\n    uuid: \"^9.0.1\"\n  },\n  peerDependencies: {\n    xstate: \"^5.5.1\"\n  },\n  scripts: {\n    build: \"tsup src/index.ts --dts\",\n    watch: \"tsup src/index.ts --dts --watch\",\n    test: \"vitest\",\n    prepublishOnly: \"tsup src/index.ts --dts\",\n    changeset: \"changeset\",\n    release: \"changeset publish\",\n    version: \"changeset version\",\n    dev: \"yarn build && ./scripts/dev.sh\"\n  },\n  publishConfig: {\n    access: \"public\"\n  },\n  packageManager: \"pnpm@8.11.0\"\n};\n\n// src/idleCallback.ts\nfunction idleCallback(cb) {\n  if (typeof window !== \"undefined\") {\n    const raf = window.requestIdleCallback || window.requestAnimationFrame;\n    raf(cb);\n  } else {\n    setTimeout(cb, 0);\n  }\n}\n\n// src/createInspector.ts\nvar import_safe_stable_stringify = __toESM(require(\"safe-stable-stringify\"));\nfunction getRoot(actorRef) {\n  let marker = actorRef;\n  do {\n    marker = marker._parent;\n  } while (marker?._parent);\n  return marker;\n}\nfunction getRootId(actorRefOrId) {\n  const rootActorRef = typeof actorRefOrId === \"string\" ? void 0 : getRoot(actorRefOrId)?.sessionId;\n  return rootActorRef ?? void 0;\n}\nvar defaultInspectorOptions = {\n  filter: () => true,\n  serialize: (event) => event,\n  autoStart: true,\n  maxDeferredEvents: 200,\n  sanitizeEvent: (event) => event,\n  sanitizeContext: (context) => context\n};\nfunction createInspector(adapter, options) {\n  function sendAdapter(inspectionEvent) {\n    if (options?.filter && !options.filter(inspectionEvent)) {\n      return;\n    }\n    const sanitizedEvent = options?.sanitizeContext || options?.sanitizeEvent ? inspectionEvent : {\n      ...inspectionEvent\n    };\n    if (options?.sanitizeContext && (sanitizedEvent.type === \"@xstate.actor\" || sanitizedEvent.type === \"@xstate.snapshot\")) {\n      sanitizedEvent.snapshot = {\n        ...sanitizedEvent.snapshot,\n        // @ts-ignore\n        context: options.sanitizeContext(\n          // @ts-ignore\n          sanitizedEvent.snapshot.context\n        )\n      };\n    }\n    if (options?.sanitizeEvent && (sanitizedEvent.type === \"@xstate.event\" || sanitizedEvent.type === \"@xstate.snapshot\")) {\n      sanitizedEvent.event = options.sanitizeEvent(sanitizedEvent.event);\n    }\n    const serializedEvent = options?.serialize?.(sanitizedEvent) ?? sanitizedEvent;\n    adapter.send(serializedEvent);\n  }\n  const inspector = {\n    adapter,\n    actor: (actorRef, snapshot, info) => {\n      const sessionId = typeof actorRef === \"string\" ? actorRef : actorRef.sessionId;\n      const definitionObject = actorRef?.logic?.config;\n      const definition = definitionObject ? (0, import_safe_stable_stringify.default)(definitionObject) : void 0;\n      const rootId = info?.rootId ?? typeof actorRef === \"string\" ? void 0 : getRootId(actorRef);\n      const parentId = info?.parentId ?? typeof actorRef === \"string\" ? void 0 : actorRef._parent?.sessionId;\n      const name = definitionObject ? definitionObject.id : sessionId;\n      sendAdapter({\n        type: \"@xstate.actor\",\n        name,\n        sessionId,\n        createdAt: Date.now().toString(),\n        _version: package_default.version,\n        rootId,\n        parentId,\n        id: null,\n        definition,\n        snapshot: snapshot ?? { status: \"active\" }\n      });\n    },\n    event: (target, event, info) => {\n      const sessionId = typeof target === \"string\" ? target : target.sessionId;\n      const sourceId = !info?.source ? void 0 : typeof info.source === \"string\" ? info.source : info.source.sessionId;\n      sendAdapter({\n        type: \"@xstate.event\",\n        sourceId,\n        sessionId,\n        event: toEventObject(event),\n        id: Math.random().toString(),\n        createdAt: Date.now().toString(),\n        rootId: \"anonymous\",\n        _version: package_default.version\n      });\n    },\n    snapshot: (actor, snapshot, info) => {\n      const sessionId = typeof actor === \"string\" ? actor : actor.sessionId;\n      sendAdapter({\n        type: \"@xstate.snapshot\",\n        snapshot: {\n          status: \"active\",\n          ...snapshot\n        },\n        event: info?.event ?? { type: \"\" },\n        sessionId,\n        id: null,\n        createdAt: Date.now().toString(),\n        rootId: \"anonymous\",\n        _version: package_default.version\n      });\n    },\n    inspect: {\n      next: (event) => {\n        idleCallback(function inspectNext() {\n          const convertedEvent = convertXStateEvent(event);\n          if (convertedEvent) {\n            sendAdapter(convertedEvent);\n          }\n        });\n      }\n    },\n    start() {\n      adapter.start?.();\n    },\n    stop() {\n      adapter.stop?.();\n    }\n  };\n  return inspector;\n}\nfunction convertXStateEvent(inspectionEvent) {\n  switch (inspectionEvent.type) {\n    case \"@xstate.actor\": {\n      const actorRef = inspectionEvent.actorRef;\n      const logic = actorRef?.logic;\n      const definitionObject = logic?.config;\n      let name = actorRef.id;\n      if (name === actorRef.sessionId && definitionObject) {\n        name = definitionObject.id;\n      }\n      const definitionString = typeof definitionObject === \"object\" ? (0, import_safe_stable_stringify.default)(definitionObject, (_key, value) => {\n        if (typeof value === \"function\") {\n          return { type: value.name };\n        }\n        return value;\n      }) : (0, import_safe_stable_stringify.default)({\n        id: name\n      });\n      return {\n        name,\n        type: \"@xstate.actor\",\n        definition: definitionString,\n        _version: package_default.version,\n        createdAt: Date.now().toString(),\n        id: null,\n        rootId: inspectionEvent.rootId,\n        parentId: inspectionEvent.actorRef._parent?.sessionId,\n        sessionId: inspectionEvent.actorRef.sessionId,\n        snapshot: inspectionEvent.actorRef.getSnapshot()\n      };\n    }\n    case \"@xstate.event\": {\n      return {\n        type: \"@xstate.event\",\n        event: inspectionEvent.event,\n        sourceId: inspectionEvent.sourceRef?.sessionId,\n        // sessionId: inspectionEvent.targetRef.sessionId,\n        sessionId: inspectionEvent.actorRef.sessionId,\n        _version: package_default.version,\n        createdAt: Date.now().toString(),\n        id: null,\n        rootId: inspectionEvent.rootId\n      };\n    }\n    case \"@xstate.snapshot\": {\n      return {\n        type: \"@xstate.snapshot\",\n        event: inspectionEvent.event,\n        snapshot: JSON.parse((0, import_safe_stable_stringify.default)(inspectionEvent.snapshot)),\n        sessionId: inspectionEvent.actorRef.sessionId,\n        _version: package_default.version,\n        createdAt: Date.now().toString(),\n        id: null,\n        rootId: inspectionEvent.rootId\n      };\n    }\n    default: {\n      if (inspectionEvent.type.startsWith(\"@xstate.\")) {\n        return void 0;\n      }\n      console.warn(\n        `Unhandled inspection event type: ${inspectionEvent.type}`\n      );\n      return void 0;\n    }\n  }\n}\n\n// src/useless.ts\nvar UselessAdapter = class {\n  constructor() {\n  }\n  start() {\n  }\n  stop() {\n  }\n  send(_event) {\n  }\n};\n\n// src/browser.ts\nvar CONNECTION_EVENT = \"@statelyai.connected\";\nfunction isEventObject(event) {\n  return typeof event === \"object\" && event !== null && typeof event.type === \"string\";\n}\nfunction isStatelyInspectionEvent(event) {\n  return typeof event === \"object\" && event !== null && typeof event.type === \"string\" && typeof event._version === \"string\";\n}\nfunction createBrowserInspector(options) {\n  const resolvedWindow = options?.window ?? (typeof window === \"undefined\" ? void 0 : window);\n  if (!resolvedWindow) {\n    console.error(\"Window does not exist; inspector cannot be started.\");\n    return new UselessAdapter();\n  }\n  const resolvedOptions = {\n    ...defaultInspectorOptions,\n    url: \"https://stately.ai/inspect\",\n    filter: () => true,\n    serialize: (inspectionEvent) => JSON.parse((0, import_fast_safe_stringify.default)(inspectionEvent)),\n    autoStart: true,\n    iframe: null,\n    ...options,\n    window: resolvedWindow\n  };\n  const adapter = new BrowserAdapter(resolvedOptions);\n  const inspector = createInspector(adapter, resolvedOptions);\n  if (resolvedOptions.autoStart) {\n    inspector.start();\n  }\n  return inspector;\n}\nvar defaultBrowserReceiverOptions = {\n  replayCount: 0,\n  window: typeof window !== \"undefined\" ? window : void 0\n};\nfunction createBrowserReceiver(options) {\n  const resolvedOptions = {\n    ...defaultBrowserReceiverOptions,\n    ...options\n  };\n  const browserWindow = resolvedOptions.window;\n  const targetWindow = browserWindow.self === browserWindow.top ? browserWindow.opener : browserWindow.parent;\n  const observers = /* @__PURE__ */ new Set();\n  browserWindow.addEventListener(\"message\", (event) => {\n    if (!isStatelyInspectionEvent(event.data)) {\n      return;\n    }\n    observers.forEach((observer) => observer.next?.(event.data));\n  });\n  const receiver = {\n    subscribe(observerOrFn) {\n      const observer = (0, import_xstate.toObserver)(observerOrFn);\n      observers.add(observer);\n      return {\n        unsubscribe() {\n          observers.delete(observer);\n        }\n      };\n    }\n  };\n  if (targetWindow) {\n    targetWindow.postMessage(\n      {\n        type: CONNECTION_EVENT\n      },\n      \"*\"\n    );\n  }\n  return receiver;\n}\nvar BrowserAdapter = class {\n  constructor(options) {\n    this.options = options;\n  }\n  status = \"disconnected\";\n  deferredEvents = [];\n  targetWindow = null;\n  start() {\n    this.targetWindow = this.options.iframe ? null : this.options.window.open(String(this.options.url), \"xstateinspector\");\n    if (this.options.iframe) {\n      this.options.iframe.addEventListener(\"load\", () => {\n        this.targetWindow = this.options.iframe?.contentWindow ?? null;\n      });\n      this.options.iframe?.setAttribute(\"src\", String(this.options.url));\n    }\n    this.options.window.addEventListener(\"message\", (event) => {\n      if (isEventObject(event.data) && event.data.type === \"@statelyai.connected\") {\n        this.status = \"connected\";\n        this.deferredEvents.forEach((event2) => {\n          const serializedEvent = this.options.serialize(event2);\n          this.targetWindow?.postMessage(serializedEvent, \"*\");\n        });\n      }\n    });\n  }\n  stop() {\n    this.targetWindow?.postMessage({ type: \"@statelyai.disconnected\" }, \"*\");\n    this.status = \"disconnected\";\n  }\n  send(event) {\n    const shouldSendEvent = this.options.filter(event);\n    if (!shouldSendEvent) {\n      return;\n    }\n    if (this.options.send) {\n      this.options.send(event);\n    } else if (this.status === \"connected\") {\n      const serializedEvent = this.options.serialize(event);\n      this.targetWindow?.postMessage(serializedEvent, \"*\");\n    }\n    this.deferredEvents.push(event);\n    if (this.deferredEvents.length > this.options.maxDeferredEvents) {\n      this.deferredEvents.shift();\n    }\n  }\n};\n\n// src/createSkyInspector.ts\nvar import_partysocket = __toESM(require(\"partysocket\"));\nvar import_superjson = require(\"superjson\");\nvar import_uuid = require(\"uuid\");\nvar isDevMode = false;\nfunction createSkyInspector(options = {}) {\n  const { host, apiBaseURL } = {\n    host: isDevMode ? \"localhost:1999\" : \"stately-sky-beta.mellson.partykit.dev\",\n    apiBaseURL: isDevMode ? \"http://localhost:3000/registry/api/sky\" : \"https://stately.ai/registry/api/sky\"\n  };\n  const server = apiBaseURL.replace(\"/api/sky\", \"\");\n  const { apiKey, onerror, ...inspectorOptions } = options;\n  const sessionId = (0, import_uuid.v4)();\n  const room = `inspect-${sessionId}`;\n  const socket = new import_partysocket.default({\n    host,\n    room,\n    WebSocket: isNode ? require(\"isomorphic-ws\") : void 0\n  });\n  const liveInspectUrl = `${server}/inspect/${sessionId}`;\n  socket.onerror = onerror ?? console.error;\n  socket.onopen = () => {\n    console.log(\"Connected to Sky, link to your live inspect session:\");\n    console.log(liveInspectUrl);\n  };\n  if (isNode) {\n    return createInspector({\n      ...inspectorOptions,\n      send(event) {\n        const skyEvent = apiKey ? { apiKey, ...event } : event;\n        socket.send((0, import_superjson.stringify)(skyEvent));\n      }\n    });\n  } else {\n    return createBrowserInspector({\n      ...inspectorOptions,\n      url: liveInspectUrl,\n      send(event) {\n        const skyEvent = apiKey ? { apiKey, ...event } : event;\n        socket.send((0, import_superjson.stringify)(skyEvent));\n      }\n    });\n  }\n}\n\n// src/webSocket.ts\nvar import_isomorphic_ws = __toESM(require(\"isomorphic-ws\"));\nvar import_safe_stable_stringify2 = __toESM(require(\"safe-stable-stringify\"));\nvar import_xstate2 = require(\"xstate\");\nvar WebSocketAdapter = class {\n  ws;\n  status = \"closed\";\n  deferredEvents = [];\n  options;\n  constructor(options) {\n    this.options = {\n      ...defaultInspectorOptions,\n      filter: () => true,\n      serialize: (inspectionEvent) => JSON.parse((0, import_safe_stable_stringify2.default)(inspectionEvent)),\n      autoStart: true,\n      url: \"ws://localhost:8080\",\n      ...options\n    };\n  }\n  start() {\n    const start = () => {\n      this.ws = new import_isomorphic_ws.default(this.options.url);\n      this.ws.onopen = () => {\n        console.log(\"websocket open\");\n        this.status = \"open\";\n        this.deferredEvents.forEach((inspectionEvent) => {\n          const preSerializedEvent = defaultInspectorOptions.serialize(inspectionEvent);\n          const serializedEvent = this.options.serialize(preSerializedEvent);\n          this.ws.send((0, import_safe_stable_stringify2.default)(serializedEvent));\n        });\n      };\n      this.ws.onclose = () => {\n        console.log(\"websocket closed\");\n      };\n      this.ws.onerror = async (event) => {\n        console.error(\"websocket error\", event);\n        await new Promise((res) => setTimeout(res, 5e3));\n        console.warn(\"restarting\");\n        start();\n      };\n      this.ws.onmessage = (event) => {\n        if (typeof event.data !== \"string\") {\n          return;\n        }\n        console.log(\"message\", event.data);\n      };\n    };\n    start();\n  }\n  stop() {\n    this.ws.close();\n    this.status = \"closed\";\n  }\n  send(inspectionEvent) {\n    if (this.status === \"open\") {\n      this.ws.send((0, import_safe_stable_stringify2.default)(inspectionEvent));\n    } else {\n      this.deferredEvents.push(inspectionEvent);\n      if (this.deferredEvents.length > this.options.maxDeferredEvents) {\n        this.deferredEvents.shift();\n      }\n    }\n  }\n};\nfunction createWebSocketInspector(options) {\n  const adapter = new WebSocketAdapter(options);\n  const inspector = createInspector(adapter, options);\n  return inspector;\n}\nfunction createWebSocketReceiver(options) {\n  const resolvedOptions = {\n    server: \"ws://localhost:8080\",\n    ...options\n  };\n  const observers = /* @__PURE__ */ new Set();\n  const ws = new import_isomorphic_ws.default(resolvedOptions.server);\n  ws.onopen = () => {\n    console.log(\"websocket open\");\n    ws.onmessage = (event) => {\n      if (typeof event.data !== \"string\") {\n        return;\n      }\n      console.log(\"message\", event.data);\n      const eventData = JSON.parse(event.data);\n      observers.forEach((observer) => {\n        observer.next?.(eventData);\n      });\n    };\n  };\n  const receiver = {\n    subscribe(observerOrFn) {\n      const observer = (0, import_xstate2.toObserver)(observerOrFn);\n      observers.add(observer);\n      return {\n        unsubscribe() {\n          observers.delete(observer);\n        }\n      };\n    }\n  };\n  return receiver;\n}\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  createBrowserInspector,\n  createBrowserReceiver,\n  createInspector,\n  createSkyInspector,\n  createWebSocketInspector,\n  createWebSocketReceiver\n});\n"],
  "mappings": "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",
  "names": ["stringify", "stringify", "value", "tmp", "key", "res", "join", "__export", "__toCommonJS", "_a", "DoubleIndexedKV", "Registry", "ClassRegistry", "CustomTransformerRegistry", "__read", "walker", "__spreadArray", "__read", "getType", "isArray", "isPlainObject", "isNull", "isUndefined", "isArray", "isPlainObject", "init_dist", "init_dist", "SuperJSON", "_a", "__assign", "__spreadArray", "__read", "require_dist", "__export", "__toCommonJS", "_a", "ws"]
}
